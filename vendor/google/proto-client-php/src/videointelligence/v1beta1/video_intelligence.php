<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/cloud/videointelligence/v1beta1/video_intelligence.proto
//   Date: 2017-04-28 15:01:14

namespace google\cloud\videointelligence\v1beta1 {

  class Feature extends \DrSlump\Protobuf\Enum {
    const FEATURE_UNSPECIFIED = 0;
    const LABEL_DETECTION = 1;
    const FACE_DETECTION = 2;
    const SHOT_CHANGE_DETECTION = 3;
    const SAFE_SEARCH_DETECTION = 4;
  }
}
namespace google\cloud\videointelligence\v1beta1 {

  class LabelLevel extends \DrSlump\Protobuf\Enum {
    const LABEL_LEVEL_UNSPECIFIED = 0;
    const VIDEO_LEVEL = 1;
    const SEGMENT_LEVEL = 2;
    const SHOT_LEVEL = 3;
    const FRAME_LEVEL = 4;
  }
}
namespace google\cloud\videointelligence\v1beta1 {

  class LabelDetectionMode extends \DrSlump\Protobuf\Enum {
    const LABEL_DETECTION_MODE_UNSPECIFIED = 0;
    const SHOT_MODE = 1;
    const FRAME_MODE = 2;
    const SHOT_AND_FRAME_MODE = 3;
  }
}
namespace google\cloud\videointelligence\v1beta1 {

  class Likelihood extends \DrSlump\Protobuf\Enum {
    const UNKNOWN = 0;
    const VERY_UNLIKELY = 1;
    const UNLIKELY = 2;
    const POSSIBLE = 3;
    const LIKELY = 4;
    const VERY_LIKELY = 5;
  }
}
namespace google\cloud\videointelligence\v1beta1 {

  class AnnotateVideoRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $input_uri = null;
    
    /**  @var string */
    public $input_content = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\Feature[]  */
    public $features = array();
    
    /**  @var \google\cloud\videointelligence\v1beta1\VideoContext */
    public $video_context = null;
    
    /**  @var string */
    public $output_uri = null;
    
    /**  @var string */
    public $location_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.AnnotateVideoRequest');

      // OPTIONAL STRING input_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "input_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING input_content = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "input_content";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED ENUM features = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "features";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Feature';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE video_context = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "video_context";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoContext';
      $descriptor->addField($f);

      // OPTIONAL STRING output_uri = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "output_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING location_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "location_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <input_uri> has a value
     *
     * @return boolean
     */
    public function hasInputUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <input_uri> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearInputUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <input_uri> value
     *
     * @return string
     */
    public function getInputUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <input_uri> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setInputUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <input_content> has a value
     *
     * @return boolean
     */
    public function hasInputContent(){
      return $this->_has(6);
    }
    
    /**
     * Clear <input_content> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearInputContent(){
      return $this->_clear(6);
    }
    
    /**
     * Get <input_content> value
     *
     * @return string
     */
    public function getInputContent(){
      return $this->_get(6);
    }
    
    /**
     * Set <input_content> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setInputContent( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <features> has a value
     *
     * @return boolean
     */
    public function hasFeatures(){
      return $this->_has(2);
    }
    
    /**
     * Clear <features> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearFeatures(){
      return $this->_clear(2);
    }
    
    /**
     * Get <features> value
     *
     * @param int $idx
     * @return int - \google\cloud\videointelligence\v1beta1\Feature
     */
    public function getFeatures($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <features> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Feature $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setFeatures( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <features>
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Feature[]
     */
    public function getFeaturesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <features>
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Feature $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function addFeatures( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <video_context> has a value
     *
     * @return boolean
     */
    public function hasVideoContext(){
      return $this->_has(3);
    }
    
    /**
     * Clear <video_context> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearVideoContext(){
      return $this->_clear(3);
    }
    
    /**
     * Get <video_context> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function getVideoContext(){
      return $this->_get(3);
    }
    
    /**
     * Set <video_context> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoContext $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setVideoContext(\google\cloud\videointelligence\v1beta1\VideoContext $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <output_uri> has a value
     *
     * @return boolean
     */
    public function hasOutputUri(){
      return $this->_has(4);
    }
    
    /**
     * Clear <output_uri> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearOutputUri(){
      return $this->_clear(4);
    }
    
    /**
     * Get <output_uri> value
     *
     * @return string
     */
    public function getOutputUri(){
      return $this->_get(4);
    }
    
    /**
     * Set <output_uri> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setOutputUri( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <location_id> has a value
     *
     * @return boolean
     */
    public function hasLocationId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <location_id> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function clearLocationId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <location_id> value
     *
     * @return string
     */
    public function getLocationId(){
      return $this->_get(5);
    }
    
    /**
     * Set <location_id> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoRequest
     */
    public function setLocationId( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class VideoContext extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\videointelligence\v1beta1\VideoSegment[]  */
    public $segments = array();
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\LabelDetectionMode */
    public $label_detection_mode = null;
    
    /**  @var boolean */
    public $stationary_camera = null;
    
    /**  @var string */
    public $label_detection_model = null;
    
    /**  @var string */
    public $face_detection_model = null;
    
    /**  @var string */
    public $shot_change_detection_model = null;
    
    /**  @var string */
    public $safe_search_detection_model = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.VideoContext');

      // REPEATED MESSAGE segments = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "segments";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoSegment';
      $descriptor->addField($f);

      // OPTIONAL ENUM label_detection_mode = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "label_detection_mode";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\LabelDetectionMode';
      $descriptor->addField($f);

      // OPTIONAL BOOL stationary_camera = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "stationary_camera";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING label_detection_model = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "label_detection_model";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING face_detection_model = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "face_detection_model";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING shot_change_detection_model = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "shot_change_detection_model";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING safe_search_detection_model = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "safe_search_detection_model";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <segments> has a value
     *
     * @return boolean
     */
    public function hasSegments(){
      return $this->_has(1);
    }
    
    /**
     * Clear <segments> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearSegments(){
      return $this->_clear(1);
    }
    
    /**
     * Get <segments> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function getSegments($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <segments> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setSegments(\google\cloud\videointelligence\v1beta1\VideoSegment $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <segments>
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment[]
     */
    public function getSegmentsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <segments>
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function addSegments(\google\cloud\videointelligence\v1beta1\VideoSegment $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <label_detection_mode> has a value
     *
     * @return boolean
     */
    public function hasLabelDetectionMode(){
      return $this->_has(2);
    }
    
    /**
     * Clear <label_detection_mode> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearLabelDetectionMode(){
      return $this->_clear(2);
    }
    
    /**
     * Get <label_detection_mode> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\LabelDetectionMode
     */
    public function getLabelDetectionMode(){
      return $this->_get(2);
    }
    
    /**
     * Set <label_detection_mode> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\LabelDetectionMode $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setLabelDetectionMode( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <stationary_camera> has a value
     *
     * @return boolean
     */
    public function hasStationaryCamera(){
      return $this->_has(3);
    }
    
    /**
     * Clear <stationary_camera> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearStationaryCamera(){
      return $this->_clear(3);
    }
    
    /**
     * Get <stationary_camera> value
     *
     * @return boolean
     */
    public function getStationaryCamera(){
      return $this->_get(3);
    }
    
    /**
     * Set <stationary_camera> value
     *
     * @param boolean $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setStationaryCamera( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <label_detection_model> has a value
     *
     * @return boolean
     */
    public function hasLabelDetectionModel(){
      return $this->_has(4);
    }
    
    /**
     * Clear <label_detection_model> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearLabelDetectionModel(){
      return $this->_clear(4);
    }
    
    /**
     * Get <label_detection_model> value
     *
     * @return string
     */
    public function getLabelDetectionModel(){
      return $this->_get(4);
    }
    
    /**
     * Set <label_detection_model> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setLabelDetectionModel( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <face_detection_model> has a value
     *
     * @return boolean
     */
    public function hasFaceDetectionModel(){
      return $this->_has(5);
    }
    
    /**
     * Clear <face_detection_model> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearFaceDetectionModel(){
      return $this->_clear(5);
    }
    
    /**
     * Get <face_detection_model> value
     *
     * @return string
     */
    public function getFaceDetectionModel(){
      return $this->_get(5);
    }
    
    /**
     * Set <face_detection_model> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setFaceDetectionModel( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <shot_change_detection_model> has a value
     *
     * @return boolean
     */
    public function hasShotChangeDetectionModel(){
      return $this->_has(6);
    }
    
    /**
     * Clear <shot_change_detection_model> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearShotChangeDetectionModel(){
      return $this->_clear(6);
    }
    
    /**
     * Get <shot_change_detection_model> value
     *
     * @return string
     */
    public function getShotChangeDetectionModel(){
      return $this->_get(6);
    }
    
    /**
     * Set <shot_change_detection_model> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setShotChangeDetectionModel( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <safe_search_detection_model> has a value
     *
     * @return boolean
     */
    public function hasSafeSearchDetectionModel(){
      return $this->_has(7);
    }
    
    /**
     * Clear <safe_search_detection_model> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function clearSafeSearchDetectionModel(){
      return $this->_clear(7);
    }
    
    /**
     * Get <safe_search_detection_model> value
     *
     * @return string
     */
    public function getSafeSearchDetectionModel(){
      return $this->_get(7);
    }
    
    /**
     * Set <safe_search_detection_model> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoContext
     */
    public function setSafeSearchDetectionModel( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class VideoSegment extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $start_time_offset = null;
    
    /**  @var int */
    public $end_time_offset = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.VideoSegment');

      // OPTIONAL INT64 start_time_offset = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "start_time_offset";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 end_time_offset = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "end_time_offset";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <start_time_offset> has a value
     *
     * @return boolean
     */
    public function hasStartTimeOffset(){
      return $this->_has(1);
    }
    
    /**
     * Clear <start_time_offset> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function clearStartTimeOffset(){
      return $this->_clear(1);
    }
    
    /**
     * Get <start_time_offset> value
     *
     * @return int
     */
    public function getStartTimeOffset(){
      return $this->_get(1);
    }
    
    /**
     * Set <start_time_offset> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function setStartTimeOffset( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <end_time_offset> has a value
     *
     * @return boolean
     */
    public function hasEndTimeOffset(){
      return $this->_has(2);
    }
    
    /**
     * Clear <end_time_offset> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function clearEndTimeOffset(){
      return $this->_clear(2);
    }
    
    /**
     * Get <end_time_offset> value
     *
     * @return int
     */
    public function getEndTimeOffset(){
      return $this->_get(2);
    }
    
    /**
     * Set <end_time_offset> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function setEndTimeOffset( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class LabelLocation extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\videointelligence\v1beta1\VideoSegment */
    public $segment = null;
    
    /**  @var float */
    public $confidence = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\LabelLevel */
    public $level = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.LabelLocation');

      // OPTIONAL MESSAGE segment = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "segment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoSegment';
      $descriptor->addField($f);

      // OPTIONAL FLOAT confidence = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "confidence";
      $f->type      = \DrSlump\Protobuf::TYPE_FLOAT;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM level = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "level";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\LabelLevel';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <segment> has a value
     *
     * @return boolean
     */
    public function hasSegment(){
      return $this->_has(1);
    }
    
    /**
     * Clear <segment> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function clearSegment(){
      return $this->_clear(1);
    }
    
    /**
     * Get <segment> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function getSegment(){
      return $this->_get(1);
    }
    
    /**
     * Set <segment> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function setSegment(\google\cloud\videointelligence\v1beta1\VideoSegment $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <confidence> has a value
     *
     * @return boolean
     */
    public function hasConfidence(){
      return $this->_has(2);
    }
    
    /**
     * Clear <confidence> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function clearConfidence(){
      return $this->_clear(2);
    }
    
    /**
     * Get <confidence> value
     *
     * @return float
     */
    public function getConfidence(){
      return $this->_get(2);
    }
    
    /**
     * Set <confidence> value
     *
     * @param float $value
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function setConfidence( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <level> has a value
     *
     * @return boolean
     */
    public function hasLevel(){
      return $this->_has(3);
    }
    
    /**
     * Clear <level> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function clearLevel(){
      return $this->_clear(3);
    }
    
    /**
     * Get <level> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\LabelLevel
     */
    public function getLevel(){
      return $this->_get(3);
    }
    
    /**
     * Set <level> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\LabelLevel $value
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function setLevel( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class LabelAnnotation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $description = null;
    
    /**  @var string */
    public $language_code = null;
    
    /**  @var \google\cloud\videointelligence\v1beta1\LabelLocation[]  */
    public $locations = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.LabelAnnotation');

      // OPTIONAL STRING description = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING language_code = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "language_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE locations = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "locations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\LabelLocation';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function clearDescription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(1);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function setDescription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <language_code> has a value
     *
     * @return boolean
     */
    public function hasLanguageCode(){
      return $this->_has(2);
    }
    
    /**
     * Clear <language_code> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function clearLanguageCode(){
      return $this->_clear(2);
    }
    
    /**
     * Get <language_code> value
     *
     * @return string
     */
    public function getLanguageCode(){
      return $this->_get(2);
    }
    
    /**
     * Set <language_code> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function setLanguageCode( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <locations> has a value
     *
     * @return boolean
     */
    public function hasLocations(){
      return $this->_has(3);
    }
    
    /**
     * Clear <locations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function clearLocations(){
      return $this->_clear(3);
    }
    
    /**
     * Get <locations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation
     */
    public function getLocations($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <locations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\LabelLocation $value
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function setLocations(\google\cloud\videointelligence\v1beta1\LabelLocation $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <locations>
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelLocation[]
     */
    public function getLocationsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <locations>
     *
     * @param \google\cloud\videointelligence\v1beta1\LabelLocation $value
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function addLocations(\google\cloud\videointelligence\v1beta1\LabelLocation $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class SafeSearchAnnotation extends \DrSlump\Protobuf\Message {

    /**  @var int - \google\cloud\videointelligence\v1beta1\Likelihood */
    public $adult = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\Likelihood */
    public $spoof = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\Likelihood */
    public $medical = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\Likelihood */
    public $violent = null;
    
    /**  @var int - \google\cloud\videointelligence\v1beta1\Likelihood */
    public $racy = null;
    
    /**  @var int */
    public $time_offset = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.SafeSearchAnnotation');

      // OPTIONAL ENUM adult = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "adult";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Likelihood';
      $descriptor->addField($f);

      // OPTIONAL ENUM spoof = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "spoof";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Likelihood';
      $descriptor->addField($f);

      // OPTIONAL ENUM medical = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "medical";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Likelihood';
      $descriptor->addField($f);

      // OPTIONAL ENUM violent = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "violent";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Likelihood';
      $descriptor->addField($f);

      // OPTIONAL ENUM racy = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "racy";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\Likelihood';
      $descriptor->addField($f);

      // OPTIONAL INT64 time_offset = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "time_offset";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <adult> has a value
     *
     * @return boolean
     */
    public function hasAdult(){
      return $this->_has(1);
    }
    
    /**
     * Clear <adult> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearAdult(){
      return $this->_clear(1);
    }
    
    /**
     * Get <adult> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Likelihood
     */
    public function getAdult(){
      return $this->_get(1);
    }
    
    /**
     * Set <adult> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Likelihood $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setAdult( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <spoof> has a value
     *
     * @return boolean
     */
    public function hasSpoof(){
      return $this->_has(2);
    }
    
    /**
     * Clear <spoof> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearSpoof(){
      return $this->_clear(2);
    }
    
    /**
     * Get <spoof> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Likelihood
     */
    public function getSpoof(){
      return $this->_get(2);
    }
    
    /**
     * Set <spoof> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Likelihood $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setSpoof( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <medical> has a value
     *
     * @return boolean
     */
    public function hasMedical(){
      return $this->_has(3);
    }
    
    /**
     * Clear <medical> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearMedical(){
      return $this->_clear(3);
    }
    
    /**
     * Get <medical> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Likelihood
     */
    public function getMedical(){
      return $this->_get(3);
    }
    
    /**
     * Set <medical> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Likelihood $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setMedical( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <violent> has a value
     *
     * @return boolean
     */
    public function hasViolent(){
      return $this->_has(4);
    }
    
    /**
     * Clear <violent> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearViolent(){
      return $this->_clear(4);
    }
    
    /**
     * Get <violent> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Likelihood
     */
    public function getViolent(){
      return $this->_get(4);
    }
    
    /**
     * Set <violent> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Likelihood $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setViolent( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <racy> has a value
     *
     * @return boolean
     */
    public function hasRacy(){
      return $this->_has(5);
    }
    
    /**
     * Clear <racy> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearRacy(){
      return $this->_clear(5);
    }
    
    /**
     * Get <racy> value
     *
     * @return int - \google\cloud\videointelligence\v1beta1\Likelihood
     */
    public function getRacy(){
      return $this->_get(5);
    }
    
    /**
     * Set <racy> value
     *
     * @param int - \google\cloud\videointelligence\v1beta1\Likelihood $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setRacy( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <time_offset> has a value
     *
     * @return boolean
     */
    public function hasTimeOffset(){
      return $this->_has(6);
    }
    
    /**
     * Clear <time_offset> value
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function clearTimeOffset(){
      return $this->_clear(6);
    }
    
    /**
     * Get <time_offset> value
     *
     * @return int
     */
    public function getTimeOffset(){
      return $this->_get(6);
    }
    
    /**
     * Set <time_offset> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function setTimeOffset( $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class BoundingBox extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $left = null;
    
    /**  @var int */
    public $right = null;
    
    /**  @var int */
    public $bottom = null;
    
    /**  @var int */
    public $top = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.BoundingBox');

      // OPTIONAL INT32 left = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "left";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 right = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "right";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 bottom = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "bottom";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 top = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "top";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <left> has a value
     *
     * @return boolean
     */
    public function hasLeft(){
      return $this->_has(1);
    }
    
    /**
     * Clear <left> value
     *
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function clearLeft(){
      return $this->_clear(1);
    }
    
    /**
     * Get <left> value
     *
     * @return int
     */
    public function getLeft(){
      return $this->_get(1);
    }
    
    /**
     * Set <left> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function setLeft( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <right> has a value
     *
     * @return boolean
     */
    public function hasRight(){
      return $this->_has(2);
    }
    
    /**
     * Clear <right> value
     *
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function clearRight(){
      return $this->_clear(2);
    }
    
    /**
     * Get <right> value
     *
     * @return int
     */
    public function getRight(){
      return $this->_get(2);
    }
    
    /**
     * Set <right> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function setRight( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <bottom> has a value
     *
     * @return boolean
     */
    public function hasBottom(){
      return $this->_has(3);
    }
    
    /**
     * Clear <bottom> value
     *
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function clearBottom(){
      return $this->_clear(3);
    }
    
    /**
     * Get <bottom> value
     *
     * @return int
     */
    public function getBottom(){
      return $this->_get(3);
    }
    
    /**
     * Set <bottom> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function setBottom( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <top> has a value
     *
     * @return boolean
     */
    public function hasTop(){
      return $this->_has(4);
    }
    
    /**
     * Clear <top> value
     *
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function clearTop(){
      return $this->_clear(4);
    }
    
    /**
     * Get <top> value
     *
     * @return int
     */
    public function getTop(){
      return $this->_get(4);
    }
    
    /**
     * Set <top> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function setTop( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class FaceLocation extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\videointelligence\v1beta1\BoundingBox */
    public $bounding_box = null;
    
    /**  @var int */
    public $time_offset = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.FaceLocation');

      // OPTIONAL MESSAGE bounding_box = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "bounding_box";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\videointelligence\v1beta1\BoundingBox';
      $descriptor->addField($f);

      // OPTIONAL INT64 time_offset = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "time_offset";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <bounding_box> has a value
     *
     * @return boolean
     */
    public function hasBoundingBox(){
      return $this->_has(1);
    }
    
    /**
     * Clear <bounding_box> value
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation
     */
    public function clearBoundingBox(){
      return $this->_clear(1);
    }
    
    /**
     * Get <bounding_box> value
     *
     * @return \google\cloud\videointelligence\v1beta1\BoundingBox
     */
    public function getBoundingBox(){
      return $this->_get(1);
    }
    
    /**
     * Set <bounding_box> value
     *
     * @param \google\cloud\videointelligence\v1beta1\BoundingBox $value
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation
     */
    public function setBoundingBox(\google\cloud\videointelligence\v1beta1\BoundingBox $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <time_offset> has a value
     *
     * @return boolean
     */
    public function hasTimeOffset(){
      return $this->_has(2);
    }
    
    /**
     * Clear <time_offset> value
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation
     */
    public function clearTimeOffset(){
      return $this->_clear(2);
    }
    
    /**
     * Get <time_offset> value
     *
     * @return int
     */
    public function getTimeOffset(){
      return $this->_get(2);
    }
    
    /**
     * Set <time_offset> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation
     */
    public function setTimeOffset( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class FaceAnnotation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $thumbnail = null;
    
    /**  @var \google\cloud\videointelligence\v1beta1\VideoSegment[]  */
    public $segments = array();
    
    /**  @var \google\cloud\videointelligence\v1beta1\FaceLocation[]  */
    public $locations = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.FaceAnnotation');

      // OPTIONAL STRING thumbnail = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "thumbnail";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE segments = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "segments";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoSegment';
      $descriptor->addField($f);

      // REPEATED MESSAGE locations = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "locations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\FaceLocation';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <thumbnail> has a value
     *
     * @return boolean
     */
    public function hasThumbnail(){
      return $this->_has(1);
    }
    
    /**
     * Clear <thumbnail> value
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function clearThumbnail(){
      return $this->_clear(1);
    }
    
    /**
     * Get <thumbnail> value
     *
     * @return string
     */
    public function getThumbnail(){
      return $this->_get(1);
    }
    
    /**
     * Set <thumbnail> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function setThumbnail( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <segments> has a value
     *
     * @return boolean
     */
    public function hasSegments(){
      return $this->_has(2);
    }
    
    /**
     * Clear <segments> value
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function clearSegments(){
      return $this->_clear(2);
    }
    
    /**
     * Get <segments> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function getSegments($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <segments> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function setSegments(\google\cloud\videointelligence\v1beta1\VideoSegment $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <segments>
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment[]
     */
    public function getSegmentsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <segments>
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function addSegments(\google\cloud\videointelligence\v1beta1\VideoSegment $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <locations> has a value
     *
     * @return boolean
     */
    public function hasLocations(){
      return $this->_has(3);
    }
    
    /**
     * Clear <locations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function clearLocations(){
      return $this->_clear(3);
    }
    
    /**
     * Get <locations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation
     */
    public function getLocations($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <locations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\FaceLocation $value
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function setLocations(\google\cloud\videointelligence\v1beta1\FaceLocation $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <locations>
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceLocation[]
     */
    public function getLocationsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <locations>
     *
     * @param \google\cloud\videointelligence\v1beta1\FaceLocation $value
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function addLocations(\google\cloud\videointelligence\v1beta1\FaceLocation $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class VideoAnnotationResults extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $input_uri = null;
    
    /**  @var \google\cloud\videointelligence\v1beta1\LabelAnnotation[]  */
    public $label_annotations = array();
    
    /**  @var \google\cloud\videointelligence\v1beta1\FaceAnnotation[]  */
    public $face_annotations = array();
    
    /**  @var \google\cloud\videointelligence\v1beta1\VideoSegment[]  */
    public $shot_annotations = array();
    
    /**  @var \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation[]  */
    public $safe_search_annotations = array();
    
    /**  @var \google\rpc\Status */
    public $error = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.VideoAnnotationResults');

      // OPTIONAL STRING input_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "input_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE label_annotations = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "label_annotations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\LabelAnnotation';
      $descriptor->addField($f);

      // REPEATED MESSAGE face_annotations = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "face_annotations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\FaceAnnotation';
      $descriptor->addField($f);

      // REPEATED MESSAGE shot_annotations = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "shot_annotations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoSegment';
      $descriptor->addField($f);

      // REPEATED MESSAGE safe_search_annotations = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "safe_search_annotations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\SafeSearchAnnotation';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE error = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "error";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\rpc\Status';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <input_uri> has a value
     *
     * @return boolean
     */
    public function hasInputUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <input_uri> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearInputUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <input_uri> value
     *
     * @return string
     */
    public function getInputUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <input_uri> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setInputUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <label_annotations> has a value
     *
     * @return boolean
     */
    public function hasLabelAnnotations(){
      return $this->_has(2);
    }
    
    /**
     * Clear <label_annotations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearLabelAnnotations(){
      return $this->_clear(2);
    }
    
    /**
     * Get <label_annotations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation
     */
    public function getLabelAnnotations($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <label_annotations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\LabelAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setLabelAnnotations(\google\cloud\videointelligence\v1beta1\LabelAnnotation $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <label_annotations>
     *
     * @return \google\cloud\videointelligence\v1beta1\LabelAnnotation[]
     */
    public function getLabelAnnotationsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <label_annotations>
     *
     * @param \google\cloud\videointelligence\v1beta1\LabelAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function addLabelAnnotations(\google\cloud\videointelligence\v1beta1\LabelAnnotation $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <face_annotations> has a value
     *
     * @return boolean
     */
    public function hasFaceAnnotations(){
      return $this->_has(3);
    }
    
    /**
     * Clear <face_annotations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearFaceAnnotations(){
      return $this->_clear(3);
    }
    
    /**
     * Get <face_annotations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation
     */
    public function getFaceAnnotations($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <face_annotations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\FaceAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setFaceAnnotations(\google\cloud\videointelligence\v1beta1\FaceAnnotation $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <face_annotations>
     *
     * @return \google\cloud\videointelligence\v1beta1\FaceAnnotation[]
     */
    public function getFaceAnnotationsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <face_annotations>
     *
     * @param \google\cloud\videointelligence\v1beta1\FaceAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function addFaceAnnotations(\google\cloud\videointelligence\v1beta1\FaceAnnotation $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <shot_annotations> has a value
     *
     * @return boolean
     */
    public function hasShotAnnotations(){
      return $this->_has(4);
    }
    
    /**
     * Clear <shot_annotations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearShotAnnotations(){
      return $this->_clear(4);
    }
    
    /**
     * Get <shot_annotations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment
     */
    public function getShotAnnotations($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <shot_annotations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setShotAnnotations(\google\cloud\videointelligence\v1beta1\VideoSegment $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <shot_annotations>
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoSegment[]
     */
    public function getShotAnnotationsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <shot_annotations>
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoSegment $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function addShotAnnotations(\google\cloud\videointelligence\v1beta1\VideoSegment $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <safe_search_annotations> has a value
     *
     * @return boolean
     */
    public function hasSafeSearchAnnotations(){
      return $this->_has(6);
    }
    
    /**
     * Clear <safe_search_annotations> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearSafeSearchAnnotations(){
      return $this->_clear(6);
    }
    
    /**
     * Get <safe_search_annotations> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation
     */
    public function getSafeSearchAnnotations($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <safe_search_annotations> value
     *
     * @param \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setSafeSearchAnnotations(\google\cloud\videointelligence\v1beta1\SafeSearchAnnotation $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <safe_search_annotations>
     *
     * @return \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation[]
     */
    public function getSafeSearchAnnotationsList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <safe_search_annotations>
     *
     * @param \google\cloud\videointelligence\v1beta1\SafeSearchAnnotation $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function addSafeSearchAnnotations(\google\cloud\videointelligence\v1beta1\SafeSearchAnnotation $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <error> has a value
     *
     * @return boolean
     */
    public function hasError(){
      return $this->_has(5);
    }
    
    /**
     * Clear <error> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function clearError(){
      return $this->_clear(5);
    }
    
    /**
     * Get <error> value
     *
     * @return \google\rpc\Status
     */
    public function getError(){
      return $this->_get(5);
    }
    
    /**
     * Set <error> value
     *
     * @param \google\rpc\Status $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function setError(\google\rpc\Status $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class AnnotateVideoResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\videointelligence\v1beta1\VideoAnnotationResults[]  */
    public $annotation_results = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.AnnotateVideoResponse');

      // REPEATED MESSAGE annotation_results = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "annotation_results";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoAnnotationResults';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <annotation_results> has a value
     *
     * @return boolean
     */
    public function hasAnnotationResults(){
      return $this->_has(1);
    }
    
    /**
     * Clear <annotation_results> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoResponse
     */
    public function clearAnnotationResults(){
      return $this->_clear(1);
    }
    
    /**
     * Get <annotation_results> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults
     */
    public function getAnnotationResults($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <annotation_results> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoAnnotationResults $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoResponse
     */
    public function setAnnotationResults(\google\cloud\videointelligence\v1beta1\VideoAnnotationResults $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <annotation_results>
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationResults[]
     */
    public function getAnnotationResultsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <annotation_results>
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoAnnotationResults $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoResponse
     */
    public function addAnnotationResults(\google\cloud\videointelligence\v1beta1\VideoAnnotationResults $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class VideoAnnotationProgress extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $input_uri = null;
    
    /**  @var int */
    public $progress_percent = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $start_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $update_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.VideoAnnotationProgress');

      // OPTIONAL STRING input_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "input_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 progress_percent = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "progress_percent";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_time = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "update_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <input_uri> has a value
     *
     * @return boolean
     */
    public function hasInputUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <input_uri> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function clearInputUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <input_uri> value
     *
     * @return string
     */
    public function getInputUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <input_uri> value
     *
     * @param string $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function setInputUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <progress_percent> has a value
     *
     * @return boolean
     */
    public function hasProgressPercent(){
      return $this->_has(2);
    }
    
    /**
     * Clear <progress_percent> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function clearProgressPercent(){
      return $this->_clear(2);
    }
    
    /**
     * Get <progress_percent> value
     *
     * @return int
     */
    public function getProgressPercent(){
      return $this->_get(2);
    }
    
    /**
     * Set <progress_percent> value
     *
     * @param int $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function setProgressPercent( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <start_time> has a value
     *
     * @return boolean
     */
    public function hasStartTime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <start_time> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function clearStartTime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStartTime(){
      return $this->_get(3);
    }
    
    /**
     * Set <start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function setStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <update_time> has a value
     *
     * @return boolean
     */
    public function hasUpdateTime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <update_time> value
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function clearUpdateTime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <update_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getUpdateTime(){
      return $this->_get(4);
    }
    
    /**
     * Set <update_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function setUpdateTime(\google\protobuf\Timestamp $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class AnnotateVideoProgress extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress[]  */
    public $annotation_progress = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.videointelligence.v1beta1.AnnotateVideoProgress');

      // REPEATED MESSAGE annotation_progress = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "annotation_progress";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\videointelligence\v1beta1\VideoAnnotationProgress';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <annotation_progress> has a value
     *
     * @return boolean
     */
    public function hasAnnotationProgress(){
      return $this->_has(1);
    }
    
    /**
     * Clear <annotation_progress> value
     *
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoProgress
     */
    public function clearAnnotationProgress(){
      return $this->_clear(1);
    }
    
    /**
     * Get <annotation_progress> value
     *
     * @param int $idx
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress
     */
    public function getAnnotationProgress($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <annotation_progress> value
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoProgress
     */
    public function setAnnotationProgress(\google\cloud\videointelligence\v1beta1\VideoAnnotationProgress $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <annotation_progress>
     *
     * @return \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress[]
     */
    public function getAnnotationProgressList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <annotation_progress>
     *
     * @param \google\cloud\videointelligence\v1beta1\VideoAnnotationProgress $value
     * @return \google\cloud\videointelligence\v1beta1\AnnotateVideoProgress
     */
    public function addAnnotationProgress(\google\cloud\videointelligence\v1beta1\VideoAnnotationProgress $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\cloud\videointelligence\v1beta1 {

  class VideoIntelligenceServiceGrpcClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts) {
      parent::__construct($hostname, $opts);
    }
    /**
     * @param google\cloud\videointelligence\v1beta1\AnnotateVideoRequest $input
     */
    public function AnnotateVideo(\google\cloud\videointelligence\v1beta1\AnnotateVideoRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.videointelligence.v1beta1.VideoIntelligenceService/AnnotateVideo', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
