<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/pubsub/v1/pubsub.proto
//   Date: 2017-05-28 01:58:18

namespace google\pubsub\v1 {

  class Topic extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.Topic');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\pubsub\v1\Topic
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\pubsub\v1\Topic
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1\PubsubMessage {

  class AttributesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PubsubMessage.AttributesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PubsubMessage extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $data = null;
    
    /**  @var \google\pubsub\v1\PubsubMessage\AttributesEntry[]  */
    public $attributes = array();
    
    /**  @var string */
    public $message_id = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $publish_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PubsubMessage');

      // OPTIONAL BYTES data = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "data";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE attributes = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "attributes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\PubsubMessage\AttributesEntry';
      $descriptor->addField($f);

      // OPTIONAL STRING message_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "message_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE publish_time = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "publish_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <data> has a value
     *
     * @return boolean
     */
    public function hasData(){
      return $this->_has(1);
    }
    
    /**
     * Clear <data> value
     *
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function clearData(){
      return $this->_clear(1);
    }
    
    /**
     * Get <data> value
     *
     * @return string
     */
    public function getData(){
      return $this->_get(1);
    }
    
    /**
     * Set <data> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function setData( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <attributes> has a value
     *
     * @return boolean
     */
    public function hasAttributes(){
      return $this->_has(2);
    }
    
    /**
     * Clear <attributes> value
     *
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function clearAttributes(){
      return $this->_clear(2);
    }
    
    /**
     * Get <attributes> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry
     */
    public function getAttributes($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <attributes> value
     *
     * @param \google\pubsub\v1\PubsubMessage\AttributesEntry $value
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function setAttributes(\google\pubsub\v1\PubsubMessage\AttributesEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <attributes>
     *
     * @return \google\pubsub\v1\PubsubMessage\AttributesEntry[]
     */
    public function getAttributesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <attributes>
     *
     * @param \google\pubsub\v1\PubsubMessage\AttributesEntry $value
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function addAttributes(\google\pubsub\v1\PubsubMessage\AttributesEntry $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <message_id> has a value
     *
     * @return boolean
     */
    public function hasMessageId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <message_id> value
     *
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function clearMessageId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <message_id> value
     *
     * @return string
     */
    public function getMessageId(){
      return $this->_get(3);
    }
    
    /**
     * Set <message_id> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function setMessageId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <publish_time> has a value
     *
     * @return boolean
     */
    public function hasPublishTime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <publish_time> value
     *
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function clearPublishTime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <publish_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getPublishTime(){
      return $this->_get(4);
    }
    
    /**
     * Set <publish_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function setPublishTime(\google\protobuf\Timestamp $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class GetTopicRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $topic = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.GetTopicRequest');

      // OPTIONAL STRING topic = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(1);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\GetTopicRequest
     */
    public function clearTopic(){
      return $this->_clear(1);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(1);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\GetTopicRequest
     */
    public function setTopic( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PublishRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $topic = null;
    
    /**  @var \google\pubsub\v1\PubsubMessage[]  */
    public $messages = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PublishRequest');

      // OPTIONAL STRING topic = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE messages = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "messages";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\PubsubMessage';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(1);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\PublishRequest
     */
    public function clearTopic(){
      return $this->_clear(1);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(1);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PublishRequest
     */
    public function setTopic( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <messages> has a value
     *
     * @return boolean
     */
    public function hasMessages(){
      return $this->_has(2);
    }
    
    /**
     * Clear <messages> value
     *
     * @return \google\pubsub\v1\PublishRequest
     */
    public function clearMessages(){
      return $this->_clear(2);
    }
    
    /**
     * Get <messages> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function getMessages($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <messages> value
     *
     * @param \google\pubsub\v1\PubsubMessage $value
     * @return \google\pubsub\v1\PublishRequest
     */
    public function setMessages(\google\pubsub\v1\PubsubMessage $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <messages>
     *
     * @return \google\pubsub\v1\PubsubMessage[]
     */
    public function getMessagesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <messages>
     *
     * @param \google\pubsub\v1\PubsubMessage $value
     * @return \google\pubsub\v1\PublishRequest
     */
    public function addMessages(\google\pubsub\v1\PubsubMessage $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PublishResponse extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $message_ids = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PublishResponse');

      // REPEATED STRING message_ids = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "message_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <message_ids> has a value
     *
     * @return boolean
     */
    public function hasMessageIds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <message_ids> value
     *
     * @return \google\pubsub\v1\PublishResponse
     */
    public function clearMessageIds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <message_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getMessageIds($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <message_ids> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PublishResponse
     */
    public function setMessageIds( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <message_ids>
     *
     * @return string[]
     */
    public function getMessageIdsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <message_ids>
     *
     * @param string $value
     * @return \google\pubsub\v1\PublishResponse
     */
    public function addMessageIds( $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListTopicsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListTopicsRequest');

      // OPTIONAL STRING project = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project> has a value
     *
     * @return boolean
     */
    public function hasProject(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project> value
     *
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function clearProject(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project> value
     *
     * @return string
     */
    public function getProject(){
      return $this->_get(1);
    }
    
    /**
     * Set <project> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function setProject( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListTopicsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\Topic[]  */
    public $topics = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListTopicsResponse');

      // REPEATED MESSAGE topics = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "topics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\Topic';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <topics> has a value
     *
     * @return boolean
     */
    public function hasTopics(){
      return $this->_has(1);
    }
    
    /**
     * Clear <topics> value
     *
     * @return \google\pubsub\v1\ListTopicsResponse
     */
    public function clearTopics(){
      return $this->_clear(1);
    }
    
    /**
     * Get <topics> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\Topic
     */
    public function getTopics($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <topics> value
     *
     * @param \google\pubsub\v1\Topic $value
     * @return \google\pubsub\v1\ListTopicsResponse
     */
    public function setTopics(\google\pubsub\v1\Topic $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <topics>
     *
     * @return \google\pubsub\v1\Topic[]
     */
    public function getTopicsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <topics>
     *
     * @param \google\pubsub\v1\Topic $value
     * @return \google\pubsub\v1\ListTopicsResponse
     */
    public function addTopics(\google\pubsub\v1\Topic $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\pubsub\v1\ListTopicsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListTopicSubscriptionsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $topic = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListTopicSubscriptionsRequest');

      // OPTIONAL STRING topic = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(1);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function clearTopic(){
      return $this->_clear(1);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(1);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function setTopic( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListTopicSubscriptionsResponse extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $subscriptions = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListTopicSubscriptionsResponse');

      // REPEATED STRING subscriptions = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscriptions";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscriptions> has a value
     *
     * @return boolean
     */
    public function hasSubscriptions(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscriptions> value
     *
     * @return \google\pubsub\v1\ListTopicSubscriptionsResponse
     */
    public function clearSubscriptions(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscriptions> value
     *
     * @param int $idx
     * @return string
     */
    public function getSubscriptions($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <subscriptions> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsResponse
     */
    public function setSubscriptions( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <subscriptions>
     *
     * @return string[]
     */
    public function getSubscriptionsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <subscriptions>
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsResponse
     */
    public function addSubscriptions( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\pubsub\v1\ListTopicSubscriptionsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListTopicSubscriptionsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class DeleteTopicRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $topic = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.DeleteTopicRequest');

      // OPTIONAL STRING topic = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(1);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\DeleteTopicRequest
     */
    public function clearTopic(){
      return $this->_clear(1);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(1);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\DeleteTopicRequest
     */
    public function setTopic( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class Subscription extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $topic = null;
    
    /**  @var \google\pubsub\v1\PushConfig */
    public $push_config = null;
    
    /**  @var int */
    public $ack_deadline_seconds = null;
    
    /**  @var boolean */
    public $retain_acked_messages = null;
    
    /**  @var \google\protobuf\Duration */
    public $message_retention_duration = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.Subscription');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING topic = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE push_config = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "push_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\pubsub\v1\PushConfig';
      $descriptor->addField($f);

      // OPTIONAL INT32 ack_deadline_seconds = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "ack_deadline_seconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL retain_acked_messages = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "retain_acked_messages";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message_retention_duration = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "message_retention_duration";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(2);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearTopic(){
      return $this->_clear(2);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(2);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setTopic( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <push_config> has a value
     *
     * @return boolean
     */
    public function hasPushConfig(){
      return $this->_has(4);
    }
    
    /**
     * Clear <push_config> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearPushConfig(){
      return $this->_clear(4);
    }
    
    /**
     * Get <push_config> value
     *
     * @return \google\pubsub\v1\PushConfig
     */
    public function getPushConfig(){
      return $this->_get(4);
    }
    
    /**
     * Set <push_config> value
     *
     * @param \google\pubsub\v1\PushConfig $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setPushConfig(\google\pubsub\v1\PushConfig $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <ack_deadline_seconds> has a value
     *
     * @return boolean
     */
    public function hasAckDeadlineSeconds(){
      return $this->_has(5);
    }
    
    /**
     * Clear <ack_deadline_seconds> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearAckDeadlineSeconds(){
      return $this->_clear(5);
    }
    
    /**
     * Get <ack_deadline_seconds> value
     *
     * @return int
     */
    public function getAckDeadlineSeconds(){
      return $this->_get(5);
    }
    
    /**
     * Set <ack_deadline_seconds> value
     *
     * @param int $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setAckDeadlineSeconds( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <retain_acked_messages> has a value
     *
     * @return boolean
     */
    public function hasRetainAckedMessages(){
      return $this->_has(7);
    }
    
    /**
     * Clear <retain_acked_messages> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearRetainAckedMessages(){
      return $this->_clear(7);
    }
    
    /**
     * Get <retain_acked_messages> value
     *
     * @return boolean
     */
    public function getRetainAckedMessages(){
      return $this->_get(7);
    }
    
    /**
     * Set <retain_acked_messages> value
     *
     * @param boolean $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setRetainAckedMessages( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <message_retention_duration> has a value
     *
     * @return boolean
     */
    public function hasMessageRetentionDuration(){
      return $this->_has(8);
    }
    
    /**
     * Clear <message_retention_duration> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function clearMessageRetentionDuration(){
      return $this->_clear(8);
    }
    
    /**
     * Get <message_retention_duration> value
     *
     * @return \google\protobuf\Duration
     */
    public function getMessageRetentionDuration(){
      return $this->_get(8);
    }
    
    /**
     * Set <message_retention_duration> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\pubsub\v1\Subscription
     */
    public function setMessageRetentionDuration(\google\protobuf\Duration $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\pubsub\v1\PushConfig {

  class AttributesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PushConfig.AttributesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\pubsub\v1\PushConfig\AttributesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PushConfig\AttributesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\pubsub\v1\PushConfig\AttributesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PushConfig\AttributesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PushConfig extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $push_endpoint = null;
    
    /**  @var \google\pubsub\v1\PushConfig\AttributesEntry[]  */
    public $attributes = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PushConfig');

      // OPTIONAL STRING push_endpoint = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "push_endpoint";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE attributes = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "attributes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\PushConfig\AttributesEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <push_endpoint> has a value
     *
     * @return boolean
     */
    public function hasPushEndpoint(){
      return $this->_has(1);
    }
    
    /**
     * Clear <push_endpoint> value
     *
     * @return \google\pubsub\v1\PushConfig
     */
    public function clearPushEndpoint(){
      return $this->_clear(1);
    }
    
    /**
     * Get <push_endpoint> value
     *
     * @return string
     */
    public function getPushEndpoint(){
      return $this->_get(1);
    }
    
    /**
     * Set <push_endpoint> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PushConfig
     */
    public function setPushEndpoint( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <attributes> has a value
     *
     * @return boolean
     */
    public function hasAttributes(){
      return $this->_has(2);
    }
    
    /**
     * Clear <attributes> value
     *
     * @return \google\pubsub\v1\PushConfig
     */
    public function clearAttributes(){
      return $this->_clear(2);
    }
    
    /**
     * Get <attributes> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\PushConfig\AttributesEntry
     */
    public function getAttributes($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <attributes> value
     *
     * @param \google\pubsub\v1\PushConfig\AttributesEntry $value
     * @return \google\pubsub\v1\PushConfig
     */
    public function setAttributes(\google\pubsub\v1\PushConfig\AttributesEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <attributes>
     *
     * @return \google\pubsub\v1\PushConfig\AttributesEntry[]
     */
    public function getAttributesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <attributes>
     *
     * @param \google\pubsub\v1\PushConfig\AttributesEntry $value
     * @return \google\pubsub\v1\PushConfig
     */
    public function addAttributes(\google\pubsub\v1\PushConfig\AttributesEntry $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ReceivedMessage extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $ack_id = null;
    
    /**  @var \google\pubsub\v1\PubsubMessage */
    public $message = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ReceivedMessage');

      // OPTIONAL STRING ack_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "ack_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "message";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\pubsub\v1\PubsubMessage';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <ack_id> has a value
     *
     * @return boolean
     */
    public function hasAckId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <ack_id> value
     *
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function clearAckId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <ack_id> value
     *
     * @return string
     */
    public function getAckId(){
      return $this->_get(1);
    }
    
    /**
     * Set <ack_id> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function setAckId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <message> has a value
     *
     * @return boolean
     */
    public function hasMessage(){
      return $this->_has(2);
    }
    
    /**
     * Clear <message> value
     *
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function clearMessage(){
      return $this->_clear(2);
    }
    
    /**
     * Get <message> value
     *
     * @return \google\pubsub\v1\PubsubMessage
     */
    public function getMessage(){
      return $this->_get(2);
    }
    
    /**
     * Set <message> value
     *
     * @param \google\pubsub\v1\PubsubMessage $value
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function setMessage(\google\pubsub\v1\PubsubMessage $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class GetSubscriptionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.GetSubscriptionRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\GetSubscriptionRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\GetSubscriptionRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class UpdateSubscriptionRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\Subscription */
    public $subscription = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_mask = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.UpdateSubscriptionRequest');

      // OPTIONAL MESSAGE subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\pubsub\v1\Subscription';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_mask = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "update_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\UpdateSubscriptionRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return \google\pubsub\v1\Subscription
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param \google\pubsub\v1\Subscription $value
     * @return \google\pubsub\v1\UpdateSubscriptionRequest
     */
    public function setSubscription(\google\pubsub\v1\Subscription $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <update_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateMask(){
      return $this->_has(2);
    }
    
    /**
     * Clear <update_mask> value
     *
     * @return \google\pubsub\v1\UpdateSubscriptionRequest
     */
    public function clearUpdateMask(){
      return $this->_clear(2);
    }
    
    /**
     * Get <update_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateMask(){
      return $this->_get(2);
    }
    
    /**
     * Set <update_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\pubsub\v1\UpdateSubscriptionRequest
     */
    public function setUpdateMask(\google\protobuf\FieldMask $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListSubscriptionsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListSubscriptionsRequest');

      // OPTIONAL STRING project = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project> has a value
     *
     * @return boolean
     */
    public function hasProject(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project> value
     *
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function clearProject(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project> value
     *
     * @return string
     */
    public function getProject(){
      return $this->_get(1);
    }
    
    /**
     * Set <project> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function setProject( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSubscriptionsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListSubscriptionsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\Subscription[]  */
    public $subscriptions = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListSubscriptionsResponse');

      // REPEATED MESSAGE subscriptions = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscriptions";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\Subscription';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscriptions> has a value
     *
     * @return boolean
     */
    public function hasSubscriptions(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscriptions> value
     *
     * @return \google\pubsub\v1\ListSubscriptionsResponse
     */
    public function clearSubscriptions(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscriptions> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\Subscription
     */
    public function getSubscriptions($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <subscriptions> value
     *
     * @param \google\pubsub\v1\Subscription $value
     * @return \google\pubsub\v1\ListSubscriptionsResponse
     */
    public function setSubscriptions(\google\pubsub\v1\Subscription $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <subscriptions>
     *
     * @return \google\pubsub\v1\Subscription[]
     */
    public function getSubscriptionsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <subscriptions>
     *
     * @param \google\pubsub\v1\Subscription $value
     * @return \google\pubsub\v1\ListSubscriptionsResponse
     */
    public function addSubscriptions(\google\pubsub\v1\Subscription $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\pubsub\v1\ListSubscriptionsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSubscriptionsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class DeleteSubscriptionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.DeleteSubscriptionRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\DeleteSubscriptionRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\DeleteSubscriptionRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ModifyPushConfigRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var \google\pubsub\v1\PushConfig */
    public $push_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ModifyPushConfigRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE push_config = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "push_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\pubsub\v1\PushConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\ModifyPushConfigRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ModifyPushConfigRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <push_config> has a value
     *
     * @return boolean
     */
    public function hasPushConfig(){
      return $this->_has(2);
    }
    
    /**
     * Clear <push_config> value
     *
     * @return \google\pubsub\v1\ModifyPushConfigRequest
     */
    public function clearPushConfig(){
      return $this->_clear(2);
    }
    
    /**
     * Get <push_config> value
     *
     * @return \google\pubsub\v1\PushConfig
     */
    public function getPushConfig(){
      return $this->_get(2);
    }
    
    /**
     * Set <push_config> value
     *
     * @param \google\pubsub\v1\PushConfig $value
     * @return \google\pubsub\v1\ModifyPushConfigRequest
     */
    public function setPushConfig(\google\pubsub\v1\PushConfig $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PullRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var boolean */
    public $return_immediately = null;
    
    /**  @var int */
    public $max_messages = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PullRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL return_immediately = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "return_immediately";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 max_messages = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "max_messages";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\PullRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\PullRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <return_immediately> has a value
     *
     * @return boolean
     */
    public function hasReturnImmediately(){
      return $this->_has(2);
    }
    
    /**
     * Clear <return_immediately> value
     *
     * @return \google\pubsub\v1\PullRequest
     */
    public function clearReturnImmediately(){
      return $this->_clear(2);
    }
    
    /**
     * Get <return_immediately> value
     *
     * @return boolean
     */
    public function getReturnImmediately(){
      return $this->_get(2);
    }
    
    /**
     * Set <return_immediately> value
     *
     * @param boolean $value
     * @return \google\pubsub\v1\PullRequest
     */
    public function setReturnImmediately( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <max_messages> has a value
     *
     * @return boolean
     */
    public function hasMaxMessages(){
      return $this->_has(3);
    }
    
    /**
     * Clear <max_messages> value
     *
     * @return \google\pubsub\v1\PullRequest
     */
    public function clearMaxMessages(){
      return $this->_clear(3);
    }
    
    /**
     * Get <max_messages> value
     *
     * @return int
     */
    public function getMaxMessages(){
      return $this->_get(3);
    }
    
    /**
     * Set <max_messages> value
     *
     * @param int $value
     * @return \google\pubsub\v1\PullRequest
     */
    public function setMaxMessages( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class PullResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\ReceivedMessage[]  */
    public $received_messages = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.PullResponse');

      // REPEATED MESSAGE received_messages = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "received_messages";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\ReceivedMessage';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <received_messages> has a value
     *
     * @return boolean
     */
    public function hasReceivedMessages(){
      return $this->_has(1);
    }
    
    /**
     * Clear <received_messages> value
     *
     * @return \google\pubsub\v1\PullResponse
     */
    public function clearReceivedMessages(){
      return $this->_clear(1);
    }
    
    /**
     * Get <received_messages> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function getReceivedMessages($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <received_messages> value
     *
     * @param \google\pubsub\v1\ReceivedMessage $value
     * @return \google\pubsub\v1\PullResponse
     */
    public function setReceivedMessages(\google\pubsub\v1\ReceivedMessage $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <received_messages>
     *
     * @return \google\pubsub\v1\ReceivedMessage[]
     */
    public function getReceivedMessagesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <received_messages>
     *
     * @param \google\pubsub\v1\ReceivedMessage $value
     * @return \google\pubsub\v1\PullResponse
     */
    public function addReceivedMessages(\google\pubsub\v1\ReceivedMessage $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ModifyAckDeadlineRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var string[]  */
    public $ack_ids = array();
    
    /**  @var int */
    public $ack_deadline_seconds = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ModifyAckDeadlineRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING ack_ids = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "ack_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL INT32 ack_deadline_seconds = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "ack_deadline_seconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <ack_ids> has a value
     *
     * @return boolean
     */
    public function hasAckIds(){
      return $this->_has(4);
    }
    
    /**
     * Clear <ack_ids> value
     *
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function clearAckIds(){
      return $this->_clear(4);
    }
    
    /**
     * Get <ack_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getAckIds($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <ack_ids> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function setAckIds( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <ack_ids>
     *
     * @return string[]
     */
    public function getAckIdsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <ack_ids>
     *
     * @param string $value
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function addAckIds( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <ack_deadline_seconds> has a value
     *
     * @return boolean
     */
    public function hasAckDeadlineSeconds(){
      return $this->_has(3);
    }
    
    /**
     * Clear <ack_deadline_seconds> value
     *
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function clearAckDeadlineSeconds(){
      return $this->_clear(3);
    }
    
    /**
     * Get <ack_deadline_seconds> value
     *
     * @return int
     */
    public function getAckDeadlineSeconds(){
      return $this->_get(3);
    }
    
    /**
     * Set <ack_deadline_seconds> value
     *
     * @param int $value
     * @return \google\pubsub\v1\ModifyAckDeadlineRequest
     */
    public function setAckDeadlineSeconds( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class AcknowledgeRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var string[]  */
    public $ack_ids = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.AcknowledgeRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING ack_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "ack_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\AcknowledgeRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\AcknowledgeRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <ack_ids> has a value
     *
     * @return boolean
     */
    public function hasAckIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <ack_ids> value
     *
     * @return \google\pubsub\v1\AcknowledgeRequest
     */
    public function clearAckIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <ack_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getAckIds($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <ack_ids> value
     *
     * @param string $value
     * @return \google\pubsub\v1\AcknowledgeRequest
     */
    public function setAckIds( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <ack_ids>
     *
     * @return string[]
     */
    public function getAckIdsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <ack_ids>
     *
     * @param string $value
     * @return \google\pubsub\v1\AcknowledgeRequest
     */
    public function addAckIds( $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class StreamingPullRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var string[]  */
    public $ack_ids = array();
    
    /**  @var int[]  */
    public $modify_deadline_seconds = array();
    
    /**  @var string[]  */
    public $modify_deadline_ack_ids = array();
    
    /**  @var int */
    public $stream_ack_deadline_seconds = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.StreamingPullRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING ack_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "ack_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED INT32 modify_deadline_seconds = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "modify_deadline_seconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING modify_deadline_ack_ids = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "modify_deadline_ack_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL INT32 stream_ack_deadline_seconds = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "stream_ack_deadline_seconds";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <ack_ids> has a value
     *
     * @return boolean
     */
    public function hasAckIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <ack_ids> value
     *
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function clearAckIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <ack_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getAckIds($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <ack_ids> value
     *
     * @param string $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function setAckIds( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <ack_ids>
     *
     * @return string[]
     */
    public function getAckIdsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <ack_ids>
     *
     * @param string $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function addAckIds( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <modify_deadline_seconds> has a value
     *
     * @return boolean
     */
    public function hasModifyDeadlineSeconds(){
      return $this->_has(3);
    }
    
    /**
     * Clear <modify_deadline_seconds> value
     *
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function clearModifyDeadlineSeconds(){
      return $this->_clear(3);
    }
    
    /**
     * Get <modify_deadline_seconds> value
     *
     * @param int $idx
     * @return int
     */
    public function getModifyDeadlineSeconds($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <modify_deadline_seconds> value
     *
     * @param int $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function setModifyDeadlineSeconds( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <modify_deadline_seconds>
     *
     * @return int[]
     */
    public function getModifyDeadlineSecondsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <modify_deadline_seconds>
     *
     * @param int $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function addModifyDeadlineSeconds( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <modify_deadline_ack_ids> has a value
     *
     * @return boolean
     */
    public function hasModifyDeadlineAckIds(){
      return $this->_has(4);
    }
    
    /**
     * Clear <modify_deadline_ack_ids> value
     *
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function clearModifyDeadlineAckIds(){
      return $this->_clear(4);
    }
    
    /**
     * Get <modify_deadline_ack_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getModifyDeadlineAckIds($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <modify_deadline_ack_ids> value
     *
     * @param string $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function setModifyDeadlineAckIds( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <modify_deadline_ack_ids>
     *
     * @return string[]
     */
    public function getModifyDeadlineAckIdsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <modify_deadline_ack_ids>
     *
     * @param string $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function addModifyDeadlineAckIds( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <stream_ack_deadline_seconds> has a value
     *
     * @return boolean
     */
    public function hasStreamAckDeadlineSeconds(){
      return $this->_has(5);
    }
    
    /**
     * Clear <stream_ack_deadline_seconds> value
     *
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function clearStreamAckDeadlineSeconds(){
      return $this->_clear(5);
    }
    
    /**
     * Get <stream_ack_deadline_seconds> value
     *
     * @return int
     */
    public function getStreamAckDeadlineSeconds(){
      return $this->_get(5);
    }
    
    /**
     * Set <stream_ack_deadline_seconds> value
     *
     * @param int $value
     * @return \google\pubsub\v1\StreamingPullRequest
     */
    public function setStreamAckDeadlineSeconds( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class StreamingPullResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\ReceivedMessage[]  */
    public $received_messages = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.StreamingPullResponse');

      // REPEATED MESSAGE received_messages = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "received_messages";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\ReceivedMessage';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <received_messages> has a value
     *
     * @return boolean
     */
    public function hasReceivedMessages(){
      return $this->_has(1);
    }
    
    /**
     * Clear <received_messages> value
     *
     * @return \google\pubsub\v1\StreamingPullResponse
     */
    public function clearReceivedMessages(){
      return $this->_clear(1);
    }
    
    /**
     * Get <received_messages> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\ReceivedMessage
     */
    public function getReceivedMessages($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <received_messages> value
     *
     * @param \google\pubsub\v1\ReceivedMessage $value
     * @return \google\pubsub\v1\StreamingPullResponse
     */
    public function setReceivedMessages(\google\pubsub\v1\ReceivedMessage $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <received_messages>
     *
     * @return \google\pubsub\v1\ReceivedMessage[]
     */
    public function getReceivedMessagesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <received_messages>
     *
     * @param \google\pubsub\v1\ReceivedMessage $value
     * @return \google\pubsub\v1\StreamingPullResponse
     */
    public function addReceivedMessages(\google\pubsub\v1\ReceivedMessage $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class CreateSnapshotRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $subscription = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.CreateSnapshotRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING subscription = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\pubsub\v1\CreateSnapshotRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\pubsub\v1\CreateSnapshotRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(2);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\CreateSnapshotRequest
     */
    public function clearSubscription(){
      return $this->_clear(2);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(2);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\CreateSnapshotRequest
     */
    public function setSubscription( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class Snapshot extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $topic = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $expire_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.Snapshot');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING topic = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "topic";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE expire_time = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "expire_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\pubsub\v1\Snapshot
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\pubsub\v1\Snapshot
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <topic> has a value
     *
     * @return boolean
     */
    public function hasTopic(){
      return $this->_has(2);
    }
    
    /**
     * Clear <topic> value
     *
     * @return \google\pubsub\v1\Snapshot
     */
    public function clearTopic(){
      return $this->_clear(2);
    }
    
    /**
     * Get <topic> value
     *
     * @return string
     */
    public function getTopic(){
      return $this->_get(2);
    }
    
    /**
     * Set <topic> value
     *
     * @param string $value
     * @return \google\pubsub\v1\Snapshot
     */
    public function setTopic( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <expire_time> has a value
     *
     * @return boolean
     */
    public function hasExpireTime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <expire_time> value
     *
     * @return \google\pubsub\v1\Snapshot
     */
    public function clearExpireTime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <expire_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getExpireTime(){
      return $this->_get(3);
    }
    
    /**
     * Set <expire_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\pubsub\v1\Snapshot
     */
    public function setExpireTime(\google\protobuf\Timestamp $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListSnapshotsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListSnapshotsRequest');

      // OPTIONAL STRING project = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project> has a value
     *
     * @return boolean
     */
    public function hasProject(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project> value
     *
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function clearProject(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project> value
     *
     * @return string
     */
    public function getProject(){
      return $this->_get(1);
    }
    
    /**
     * Set <project> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function setProject( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSnapshotsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class ListSnapshotsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\pubsub\v1\Snapshot[]  */
    public $snapshots = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.ListSnapshotsResponse');

      // REPEATED MESSAGE snapshots = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "snapshots";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\pubsub\v1\Snapshot';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <snapshots> has a value
     *
     * @return boolean
     */
    public function hasSnapshots(){
      return $this->_has(1);
    }
    
    /**
     * Clear <snapshots> value
     *
     * @return \google\pubsub\v1\ListSnapshotsResponse
     */
    public function clearSnapshots(){
      return $this->_clear(1);
    }
    
    /**
     * Get <snapshots> value
     *
     * @param int $idx
     * @return \google\pubsub\v1\Snapshot
     */
    public function getSnapshots($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <snapshots> value
     *
     * @param \google\pubsub\v1\Snapshot $value
     * @return \google\pubsub\v1\ListSnapshotsResponse
     */
    public function setSnapshots(\google\pubsub\v1\Snapshot $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <snapshots>
     *
     * @return \google\pubsub\v1\Snapshot[]
     */
    public function getSnapshotsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <snapshots>
     *
     * @param \google\pubsub\v1\Snapshot $value
     * @return \google\pubsub\v1\ListSnapshotsResponse
     */
    public function addSnapshots(\google\pubsub\v1\Snapshot $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\pubsub\v1\ListSnapshotsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\pubsub\v1\ListSnapshotsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class DeleteSnapshotRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $snapshot = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.DeleteSnapshotRequest');

      // OPTIONAL STRING snapshot = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "snapshot";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <snapshot> has a value
     *
     * @return boolean
     */
    public function hasSnapshot(){
      return $this->_has(1);
    }
    
    /**
     * Clear <snapshot> value
     *
     * @return \google\pubsub\v1\DeleteSnapshotRequest
     */
    public function clearSnapshot(){
      return $this->_clear(1);
    }
    
    /**
     * Get <snapshot> value
     *
     * @return string
     */
    public function getSnapshot(){
      return $this->_get(1);
    }
    
    /**
     * Set <snapshot> value
     *
     * @param string $value
     * @return \google\pubsub\v1\DeleteSnapshotRequest
     */
    public function setSnapshot( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class SeekRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $subscription = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $time = null;
    
    /**  @var string */
    public $snapshot = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.SeekRequest');

      // OPTIONAL STRING subscription = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "subscription";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL STRING snapshot = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "snapshot";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <subscription> has a value
     *
     * @return boolean
     */
    public function hasSubscription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <subscription> value
     *
     * @return \google\pubsub\v1\SeekRequest
     */
    public function clearSubscription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <subscription> value
     *
     * @return string
     */
    public function getSubscription(){
      return $this->_get(1);
    }
    
    /**
     * Set <subscription> value
     *
     * @param string $value
     * @return \google\pubsub\v1\SeekRequest
     */
    public function setSubscription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <time> has a value
     *
     * @return boolean
     */
    public function hasTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <time> value
     *
     * @return \google\pubsub\v1\SeekRequest
     */
    public function clearTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\pubsub\v1\SeekRequest
     */
    public function setTime(\google\protobuf\Timestamp $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <snapshot> has a value
     *
     * @return boolean
     */
    public function hasSnapshot(){
      return $this->_has(3);
    }
    
    /**
     * Clear <snapshot> value
     *
     * @return \google\pubsub\v1\SeekRequest
     */
    public function clearSnapshot(){
      return $this->_clear(3);
    }
    
    /**
     * Get <snapshot> value
     *
     * @return string
     */
    public function getSnapshot(){
      return $this->_get(3);
    }
    
    /**
     * Set <snapshot> value
     *
     * @param string $value
     * @return \google\pubsub\v1\SeekRequest
     */
    public function setSnapshot( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\pubsub\v1 {

  class SeekResponse extends \DrSlump\Protobuf\Message {


    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.pubsub.v1.SeekResponse');

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }
  }
}

namespace google\pubsub\v1 {

  class SubscriberGrpcClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts) {
      parent::__construct($hostname, $opts);
    }
    /**
     * @param google\pubsub\v1\Subscription $input
     */
    public function CreateSubscription(\google\pubsub\v1\Subscription $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/CreateSubscription', $argument, '\google\pubsub\v1\Subscription::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\GetSubscriptionRequest $input
     */
    public function GetSubscription(\google\pubsub\v1\GetSubscriptionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/GetSubscription', $argument, '\google\pubsub\v1\Subscription::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\UpdateSubscriptionRequest $input
     */
    public function UpdateSubscription(\google\pubsub\v1\UpdateSubscriptionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/UpdateSubscription', $argument, '\google\pubsub\v1\Subscription::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ListSubscriptionsRequest $input
     */
    public function ListSubscriptions(\google\pubsub\v1\ListSubscriptionsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/ListSubscriptions', $argument, '\google\pubsub\v1\ListSubscriptionsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\DeleteSubscriptionRequest $input
     */
    public function DeleteSubscription(\google\pubsub\v1\DeleteSubscriptionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/DeleteSubscription', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ModifyAckDeadlineRequest $input
     */
    public function ModifyAckDeadline(\google\pubsub\v1\ModifyAckDeadlineRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/ModifyAckDeadline', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\AcknowledgeRequest $input
     */
    public function Acknowledge(\google\pubsub\v1\AcknowledgeRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/Acknowledge', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\PullRequest $input
     */
    public function Pull(\google\pubsub\v1\PullRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/Pull', $argument, '\google\pubsub\v1\PullResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\StreamingPullRequest $input
     */
    public function StreamingPull($metadata = array(), $options = array()) {
      return $this->_bidiRequest('/google.pubsub.v1.Subscriber/StreamingPull', '\google\pubsub\v1\StreamingPullResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ModifyPushConfigRequest $input
     */
    public function ModifyPushConfig(\google\pubsub\v1\ModifyPushConfigRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/ModifyPushConfig', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ListSnapshotsRequest $input
     */
    public function ListSnapshots(\google\pubsub\v1\ListSnapshotsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/ListSnapshots', $argument, '\google\pubsub\v1\ListSnapshotsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\CreateSnapshotRequest $input
     */
    public function CreateSnapshot(\google\pubsub\v1\CreateSnapshotRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/CreateSnapshot', $argument, '\google\pubsub\v1\Snapshot::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\DeleteSnapshotRequest $input
     */
    public function DeleteSnapshot(\google\pubsub\v1\DeleteSnapshotRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/DeleteSnapshot', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\SeekRequest $input
     */
    public function Seek(\google\pubsub\v1\SeekRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Subscriber/Seek', $argument, '\google\pubsub\v1\SeekResponse::deserialize', $metadata, $options);
    }
  }
}
namespace google\pubsub\v1 {

  class PublisherGrpcClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts) {
      parent::__construct($hostname, $opts);
    }
    /**
     * @param google\pubsub\v1\Topic $input
     */
    public function CreateTopic(\google\pubsub\v1\Topic $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/CreateTopic', $argument, '\google\pubsub\v1\Topic::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\PublishRequest $input
     */
    public function Publish(\google\pubsub\v1\PublishRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/Publish', $argument, '\google\pubsub\v1\PublishResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\GetTopicRequest $input
     */
    public function GetTopic(\google\pubsub\v1\GetTopicRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/GetTopic', $argument, '\google\pubsub\v1\Topic::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ListTopicsRequest $input
     */
    public function ListTopics(\google\pubsub\v1\ListTopicsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/ListTopics', $argument, '\google\pubsub\v1\ListTopicsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\ListTopicSubscriptionsRequest $input
     */
    public function ListTopicSubscriptions(\google\pubsub\v1\ListTopicSubscriptionsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/ListTopicSubscriptions', $argument, '\google\pubsub\v1\ListTopicSubscriptionsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\pubsub\v1\DeleteTopicRequest $input
     */
    public function DeleteTopic(\google\pubsub\v1\DeleteTopicRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.pubsub.v1.Publisher/DeleteTopic', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
  }
}
