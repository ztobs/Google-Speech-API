<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/logging/v2/log_entry.proto
//   Date: 2017-05-28 01:56:50

namespace google\logging\v2\LogEntry {

  class LabelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.logging.v2.LogEntry.LabelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\logging\v2\LogEntry\LabelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry\LabelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\logging\v2\LogEntry\LabelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry\LabelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\logging\v2 {

  class LogEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $log_name = null;
    
    /**  @var \google\api\MonitoredResource */
    public $resource = null;
    
    /**  @var \google\protobuf\Any */
    public $proto_payload = null;
    
    /**  @var string */
    public $text_payload = null;
    
    /**  @var \google\protobuf\Struct */
    public $json_payload = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $timestamp = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $receive_timestamp = null;
    
    /**  @var int - \google\logging\type\LogSeverity */
    public $severity = null;
    
    /**  @var string */
    public $insert_id = null;
    
    /**  @var \google\logging\type\HttpRequest */
    public $http_request = null;
    
    /**  @var \google\logging\v2\LogEntry\LabelsEntry[]  */
    public $labels = array();
    
    /**  @var \google\logging\v2\LogEntryOperation */
    public $operation = null;
    
    /**  @var string */
    public $trace = null;
    
    /**  @var \google\logging\v2\LogEntrySourceLocation */
    public $source_location = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.logging.v2.LogEntry');

      // OPTIONAL STRING log_name = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "log_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE resource = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "resource";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\MonitoredResource';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE proto_payload = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "proto_payload";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Any';
      $descriptor->addField($f);

      // OPTIONAL STRING text_payload = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "text_payload";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE json_payload = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "json_payload";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Struct';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE timestamp = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "timestamp";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE receive_timestamp = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "receive_timestamp";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL ENUM severity = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "severity";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\logging\type\LogSeverity';
      $descriptor->addField($f);

      // OPTIONAL STRING insert_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "insert_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE http_request = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "http_request";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\logging\type\HttpRequest';
      $descriptor->addField($f);

      // REPEATED MESSAGE labels = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "labels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\logging\v2\LogEntry\LabelsEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operation = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "operation";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\logging\v2\LogEntryOperation';
      $descriptor->addField($f);

      // OPTIONAL STRING trace = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "trace";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE source_location = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "source_location";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\logging\v2\LogEntrySourceLocation';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <log_name> has a value
     *
     * @return boolean
     */
    public function hasLogName(){
      return $this->_has(12);
    }
    
    /**
     * Clear <log_name> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearLogName(){
      return $this->_clear(12);
    }
    
    /**
     * Get <log_name> value
     *
     * @return string
     */
    public function getLogName(){
      return $this->_get(12);
    }
    
    /**
     * Set <log_name> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry
     */
    public function setLogName( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <resource> has a value
     *
     * @return boolean
     */
    public function hasResource(){
      return $this->_has(8);
    }
    
    /**
     * Clear <resource> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearResource(){
      return $this->_clear(8);
    }
    
    /**
     * Get <resource> value
     *
     * @return \google\api\MonitoredResource
     */
    public function getResource(){
      return $this->_get(8);
    }
    
    /**
     * Set <resource> value
     *
     * @param \google\api\MonitoredResource $value
     * @return \google\logging\v2\LogEntry
     */
    public function setResource(\google\api\MonitoredResource $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <proto_payload> has a value
     *
     * @return boolean
     */
    public function hasProtoPayload(){
      return $this->_has(2);
    }
    
    /**
     * Clear <proto_payload> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearProtoPayload(){
      return $this->_clear(2);
    }
    
    /**
     * Get <proto_payload> value
     *
     * @return \google\protobuf\Any
     */
    public function getProtoPayload(){
      return $this->_get(2);
    }
    
    /**
     * Set <proto_payload> value
     *
     * @param \google\protobuf\Any $value
     * @return \google\logging\v2\LogEntry
     */
    public function setProtoPayload(\google\protobuf\Any $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <text_payload> has a value
     *
     * @return boolean
     */
    public function hasTextPayload(){
      return $this->_has(3);
    }
    
    /**
     * Clear <text_payload> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearTextPayload(){
      return $this->_clear(3);
    }
    
    /**
     * Get <text_payload> value
     *
     * @return string
     */
    public function getTextPayload(){
      return $this->_get(3);
    }
    
    /**
     * Set <text_payload> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry
     */
    public function setTextPayload( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <json_payload> has a value
     *
     * @return boolean
     */
    public function hasJsonPayload(){
      return $this->_has(6);
    }
    
    /**
     * Clear <json_payload> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearJsonPayload(){
      return $this->_clear(6);
    }
    
    /**
     * Get <json_payload> value
     *
     * @return \google\protobuf\Struct
     */
    public function getJsonPayload(){
      return $this->_get(6);
    }
    
    /**
     * Set <json_payload> value
     *
     * @param \google\protobuf\Struct $value
     * @return \google\logging\v2\LogEntry
     */
    public function setJsonPayload(\google\protobuf\Struct $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <timestamp> has a value
     *
     * @return boolean
     */
    public function hasTimestamp(){
      return $this->_has(9);
    }
    
    /**
     * Clear <timestamp> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearTimestamp(){
      return $this->_clear(9);
    }
    
    /**
     * Get <timestamp> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getTimestamp(){
      return $this->_get(9);
    }
    
    /**
     * Set <timestamp> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\logging\v2\LogEntry
     */
    public function setTimestamp(\google\protobuf\Timestamp $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <receive_timestamp> has a value
     *
     * @return boolean
     */
    public function hasReceiveTimestamp(){
      return $this->_has(24);
    }
    
    /**
     * Clear <receive_timestamp> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearReceiveTimestamp(){
      return $this->_clear(24);
    }
    
    /**
     * Get <receive_timestamp> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getReceiveTimestamp(){
      return $this->_get(24);
    }
    
    /**
     * Set <receive_timestamp> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\logging\v2\LogEntry
     */
    public function setReceiveTimestamp(\google\protobuf\Timestamp $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <severity> has a value
     *
     * @return boolean
     */
    public function hasSeverity(){
      return $this->_has(10);
    }
    
    /**
     * Clear <severity> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearSeverity(){
      return $this->_clear(10);
    }
    
    /**
     * Get <severity> value
     *
     * @return int - \google\logging\type\LogSeverity
     */
    public function getSeverity(){
      return $this->_get(10);
    }
    
    /**
     * Set <severity> value
     *
     * @param int - \google\logging\type\LogSeverity $value
     * @return \google\logging\v2\LogEntry
     */
    public function setSeverity( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <insert_id> has a value
     *
     * @return boolean
     */
    public function hasInsertId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <insert_id> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearInsertId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <insert_id> value
     *
     * @return string
     */
    public function getInsertId(){
      return $this->_get(4);
    }
    
    /**
     * Set <insert_id> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry
     */
    public function setInsertId( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <http_request> has a value
     *
     * @return boolean
     */
    public function hasHttpRequest(){
      return $this->_has(7);
    }
    
    /**
     * Clear <http_request> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearHttpRequest(){
      return $this->_clear(7);
    }
    
    /**
     * Get <http_request> value
     *
     * @return \google\logging\type\HttpRequest
     */
    public function getHttpRequest(){
      return $this->_get(7);
    }
    
    /**
     * Set <http_request> value
     *
     * @param \google\logging\type\HttpRequest $value
     * @return \google\logging\v2\LogEntry
     */
    public function setHttpRequest(\google\logging\type\HttpRequest $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <labels> has a value
     *
     * @return boolean
     */
    public function hasLabels(){
      return $this->_has(11);
    }
    
    /**
     * Clear <labels> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearLabels(){
      return $this->_clear(11);
    }
    
    /**
     * Get <labels> value
     *
     * @param int $idx
     * @return \google\logging\v2\LogEntry\LabelsEntry
     */
    public function getLabels($idx = NULL){
      return $this->_get(11, $idx);
    }
    
    /**
     * Set <labels> value
     *
     * @param \google\logging\v2\LogEntry\LabelsEntry $value
     * @return \google\logging\v2\LogEntry
     */
    public function setLabels(\google\logging\v2\LogEntry\LabelsEntry $value, $idx = NULL){
      return $this->_set(11, $value, $idx);
    }
    
    /**
     * Get all elements of <labels>
     *
     * @return \google\logging\v2\LogEntry\LabelsEntry[]
     */
    public function getLabelsList(){
     return $this->_get(11);
    }
    
    /**
     * Add a new element to <labels>
     *
     * @param \google\logging\v2\LogEntry\LabelsEntry $value
     * @return \google\logging\v2\LogEntry
     */
    public function addLabels(\google\logging\v2\LogEntry\LabelsEntry $value){
     return $this->_add(11, $value);
    }
    
    /**
     * Check if <operation> has a value
     *
     * @return boolean
     */
    public function hasOperation(){
      return $this->_has(15);
    }
    
    /**
     * Clear <operation> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearOperation(){
      return $this->_clear(15);
    }
    
    /**
     * Get <operation> value
     *
     * @return \google\logging\v2\LogEntryOperation
     */
    public function getOperation(){
      return $this->_get(15);
    }
    
    /**
     * Set <operation> value
     *
     * @param \google\logging\v2\LogEntryOperation $value
     * @return \google\logging\v2\LogEntry
     */
    public function setOperation(\google\logging\v2\LogEntryOperation $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <trace> has a value
     *
     * @return boolean
     */
    public function hasTrace(){
      return $this->_has(22);
    }
    
    /**
     * Clear <trace> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearTrace(){
      return $this->_clear(22);
    }
    
    /**
     * Get <trace> value
     *
     * @return string
     */
    public function getTrace(){
      return $this->_get(22);
    }
    
    /**
     * Set <trace> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntry
     */
    public function setTrace( $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <source_location> has a value
     *
     * @return boolean
     */
    public function hasSourceLocation(){
      return $this->_has(23);
    }
    
    /**
     * Clear <source_location> value
     *
     * @return \google\logging\v2\LogEntry
     */
    public function clearSourceLocation(){
      return $this->_clear(23);
    }
    
    /**
     * Get <source_location> value
     *
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function getSourceLocation(){
      return $this->_get(23);
    }
    
    /**
     * Set <source_location> value
     *
     * @param \google\logging\v2\LogEntrySourceLocation $value
     * @return \google\logging\v2\LogEntry
     */
    public function setSourceLocation(\google\logging\v2\LogEntrySourceLocation $value){
      return $this->_set(23, $value);
    }
  }
}

namespace google\logging\v2 {

  class LogEntryOperation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $producer = null;
    
    /**  @var boolean */
    public $first = null;
    
    /**  @var boolean */
    public $last = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.logging.v2.LogEntryOperation');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING producer = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "producer";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL first = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "first";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL last = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "last";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\logging\v2\LogEntryOperation
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntryOperation
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <producer> has a value
     *
     * @return boolean
     */
    public function hasProducer(){
      return $this->_has(2);
    }
    
    /**
     * Clear <producer> value
     *
     * @return \google\logging\v2\LogEntryOperation
     */
    public function clearProducer(){
      return $this->_clear(2);
    }
    
    /**
     * Get <producer> value
     *
     * @return string
     */
    public function getProducer(){
      return $this->_get(2);
    }
    
    /**
     * Set <producer> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntryOperation
     */
    public function setProducer( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <first> has a value
     *
     * @return boolean
     */
    public function hasFirst(){
      return $this->_has(3);
    }
    
    /**
     * Clear <first> value
     *
     * @return \google\logging\v2\LogEntryOperation
     */
    public function clearFirst(){
      return $this->_clear(3);
    }
    
    /**
     * Get <first> value
     *
     * @return boolean
     */
    public function getFirst(){
      return $this->_get(3);
    }
    
    /**
     * Set <first> value
     *
     * @param boolean $value
     * @return \google\logging\v2\LogEntryOperation
     */
    public function setFirst( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <last> has a value
     *
     * @return boolean
     */
    public function hasLast(){
      return $this->_has(4);
    }
    
    /**
     * Clear <last> value
     *
     * @return \google\logging\v2\LogEntryOperation
     */
    public function clearLast(){
      return $this->_clear(4);
    }
    
    /**
     * Get <last> value
     *
     * @return boolean
     */
    public function getLast(){
      return $this->_get(4);
    }
    
    /**
     * Set <last> value
     *
     * @param boolean $value
     * @return \google\logging\v2\LogEntryOperation
     */
    public function setLast( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\logging\v2 {

  class LogEntrySourceLocation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $file = null;
    
    /**  @var int */
    public $line = null;
    
    /**  @var string */
    public $function = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.logging.v2.LogEntrySourceLocation');

      // OPTIONAL STRING file = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "file";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 line = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "line";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING function = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "function";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <file> has a value
     *
     * @return boolean
     */
    public function hasFile(){
      return $this->_has(1);
    }
    
    /**
     * Clear <file> value
     *
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function clearFile(){
      return $this->_clear(1);
    }
    
    /**
     * Get <file> value
     *
     * @return string
     */
    public function getFile(){
      return $this->_get(1);
    }
    
    /**
     * Set <file> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function setFile( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <line> has a value
     *
     * @return boolean
     */
    public function hasLine(){
      return $this->_has(2);
    }
    
    /**
     * Clear <line> value
     *
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function clearLine(){
      return $this->_clear(2);
    }
    
    /**
     * Get <line> value
     *
     * @return int
     */
    public function getLine(){
      return $this->_get(2);
    }
    
    /**
     * Set <line> value
     *
     * @param int $value
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function setLine( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <function> has a value
     *
     * @return boolean
     */
    public function hasFunction(){
      return $this->_has(3);
    }
    
    /**
     * Clear <function> value
     *
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function clearFunction(){
      return $this->_clear(3);
    }
    
    /**
     * Get <function> value
     *
     * @return string
     */
    public function getFunction(){
      return $this->_get(3);
    }
    
    /**
     * Set <function> value
     *
     * @param string $value
     * @return \google\logging\v2\LogEntrySourceLocation
     */
    public function setFunction( $value){
      return $this->_set(3, $value);
    }
  }
}

