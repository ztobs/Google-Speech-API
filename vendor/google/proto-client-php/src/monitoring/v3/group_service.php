<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/monitoring/v3/group_service.proto
//   Date: 2016-12-21 23:03:55

namespace google\monitoring\v3 {

  class ListGroupsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $children_of_group = null;
    
    /**  @var string */
    public $ancestors_of_group = null;
    
    /**  @var string */
    public $descendants_of_group = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.ListGroupsRequest');

      // OPTIONAL STRING name = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING children_of_group = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "children_of_group";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING ancestors_of_group = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "ancestors_of_group";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING descendants_of_group = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "descendants_of_group";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(7);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearName(){
      return $this->_clear(7);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(7);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setName( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <children_of_group> has a value
     *
     * @return boolean
     */
    public function hasChildrenOfGroup(){
      return $this->_has(2);
    }
    
    /**
     * Clear <children_of_group> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearChildrenOfGroup(){
      return $this->_clear(2);
    }
    
    /**
     * Get <children_of_group> value
     *
     * @return string
     */
    public function getChildrenOfGroup(){
      return $this->_get(2);
    }
    
    /**
     * Set <children_of_group> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setChildrenOfGroup( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <ancestors_of_group> has a value
     *
     * @return boolean
     */
    public function hasAncestorsOfGroup(){
      return $this->_has(3);
    }
    
    /**
     * Clear <ancestors_of_group> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearAncestorsOfGroup(){
      return $this->_clear(3);
    }
    
    /**
     * Get <ancestors_of_group> value
     *
     * @return string
     */
    public function getAncestorsOfGroup(){
      return $this->_get(3);
    }
    
    /**
     * Set <ancestors_of_group> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setAncestorsOfGroup( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <descendants_of_group> has a value
     *
     * @return boolean
     */
    public function hasDescendantsOfGroup(){
      return $this->_has(4);
    }
    
    /**
     * Clear <descendants_of_group> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearDescendantsOfGroup(){
      return $this->_clear(4);
    }
    
    /**
     * Get <descendants_of_group> value
     *
     * @return string
     */
    public function getDescendantsOfGroup(){
      return $this->_get(4);
    }
    
    /**
     * Set <descendants_of_group> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setDescendantsOfGroup( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearPageSize(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setPageSize( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(6);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function clearPageToken(){
      return $this->_clear(6);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(6);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsRequest
     */
    public function setPageToken( $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class ListGroupsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\monitoring\v3\Group[]  */
    public $group = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.ListGroupsResponse');

      // REPEATED MESSAGE group = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "group";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\monitoring\v3\Group';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <group> has a value
     *
     * @return boolean
     */
    public function hasGroup(){
      return $this->_has(1);
    }
    
    /**
     * Clear <group> value
     *
     * @return \google\monitoring\v3\ListGroupsResponse
     */
    public function clearGroup(){
      return $this->_clear(1);
    }
    
    /**
     * Get <group> value
     *
     * @param int $idx
     * @return \google\monitoring\v3\Group
     */
    public function getGroup($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <group> value
     *
     * @param \google\monitoring\v3\Group $value
     * @return \google\monitoring\v3\ListGroupsResponse
     */
    public function setGroup(\google\monitoring\v3\Group $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <group>
     *
     * @return \google\monitoring\v3\Group[]
     */
    public function getGroupList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <group>
     *
     * @param \google\monitoring\v3\Group $value
     * @return \google\monitoring\v3\ListGroupsResponse
     */
    public function addGroup(\google\monitoring\v3\Group $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\monitoring\v3\ListGroupsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class GetGroupRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.GetGroupRequest');

      // OPTIONAL STRING name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\GetGroupRequest
     */
    public function clearName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(3);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\GetGroupRequest
     */
    public function setName( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class CreateGroupRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\monitoring\v3\Group */
    public $group = null;
    
    /**  @var boolean */
    public $validate_only = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.CreateGroupRequest');

      // OPTIONAL STRING name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "group";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\monitoring\v3\Group';
      $descriptor->addField($f);

      // OPTIONAL BOOL validate_only = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "validate_only";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function clearName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(4);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function setName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <group> has a value
     *
     * @return boolean
     */
    public function hasGroup(){
      return $this->_has(2);
    }
    
    /**
     * Clear <group> value
     *
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function clearGroup(){
      return $this->_clear(2);
    }
    
    /**
     * Get <group> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function getGroup(){
      return $this->_get(2);
    }
    
    /**
     * Set <group> value
     *
     * @param \google\monitoring\v3\Group $value
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function setGroup(\google\monitoring\v3\Group $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <validate_only> has a value
     *
     * @return boolean
     */
    public function hasValidateOnly(){
      return $this->_has(3);
    }
    
    /**
     * Clear <validate_only> value
     *
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function clearValidateOnly(){
      return $this->_clear(3);
    }
    
    /**
     * Get <validate_only> value
     *
     * @return boolean
     */
    public function getValidateOnly(){
      return $this->_get(3);
    }
    
    /**
     * Set <validate_only> value
     *
     * @param boolean $value
     * @return \google\monitoring\v3\CreateGroupRequest
     */
    public function setValidateOnly( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class UpdateGroupRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\monitoring\v3\Group */
    public $group = null;
    
    /**  @var boolean */
    public $validate_only = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.UpdateGroupRequest');

      // OPTIONAL MESSAGE group = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "group";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\monitoring\v3\Group';
      $descriptor->addField($f);

      // OPTIONAL BOOL validate_only = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "validate_only";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <group> has a value
     *
     * @return boolean
     */
    public function hasGroup(){
      return $this->_has(2);
    }
    
    /**
     * Clear <group> value
     *
     * @return \google\monitoring\v3\UpdateGroupRequest
     */
    public function clearGroup(){
      return $this->_clear(2);
    }
    
    /**
     * Get <group> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function getGroup(){
      return $this->_get(2);
    }
    
    /**
     * Set <group> value
     *
     * @param \google\monitoring\v3\Group $value
     * @return \google\monitoring\v3\UpdateGroupRequest
     */
    public function setGroup(\google\monitoring\v3\Group $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <validate_only> has a value
     *
     * @return boolean
     */
    public function hasValidateOnly(){
      return $this->_has(3);
    }
    
    /**
     * Clear <validate_only> value
     *
     * @return \google\monitoring\v3\UpdateGroupRequest
     */
    public function clearValidateOnly(){
      return $this->_clear(3);
    }
    
    /**
     * Get <validate_only> value
     *
     * @return boolean
     */
    public function getValidateOnly(){
      return $this->_get(3);
    }
    
    /**
     * Set <validate_only> value
     *
     * @param boolean $value
     * @return \google\monitoring\v3\UpdateGroupRequest
     */
    public function setValidateOnly( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class DeleteGroupRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.DeleteGroupRequest');

      // OPTIONAL STRING name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\DeleteGroupRequest
     */
    public function clearName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(3);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\DeleteGroupRequest
     */
    public function setName( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class ListGroupMembersRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var string */
    public $filter = null;
    
    /**  @var \google\monitoring\v3\TimeInterval */
    public $interval = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.ListGroupMembersRequest');

      // OPTIONAL STRING name = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filter = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE interval = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "interval";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\monitoring\v3\TimeInterval';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(7);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function clearName(){
      return $this->_clear(7);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(7);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function setName( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(5);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function clearFilter(){
      return $this->_clear(5);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(5);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function setFilter( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <interval> has a value
     *
     * @return boolean
     */
    public function hasInterval(){
      return $this->_has(6);
    }
    
    /**
     * Clear <interval> value
     *
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function clearInterval(){
      return $this->_clear(6);
    }
    
    /**
     * Get <interval> value
     *
     * @return \google\monitoring\v3\TimeInterval
     */
    public function getInterval(){
      return $this->_get(6);
    }
    
    /**
     * Set <interval> value
     *
     * @param \google\monitoring\v3\TimeInterval $value
     * @return \google\monitoring\v3\ListGroupMembersRequest
     */
    public function setInterval(\google\monitoring\v3\TimeInterval $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class ListGroupMembersResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\MonitoredResource[]  */
    public $members = array();
    
    /**  @var string */
    public $next_page_token = null;
    
    /**  @var int */
    public $total_size = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.ListGroupMembersResponse');

      // REPEATED MESSAGE members = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "members";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\MonitoredResource';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 total_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "total_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <members> has a value
     *
     * @return boolean
     */
    public function hasMembers(){
      return $this->_has(1);
    }
    
    /**
     * Clear <members> value
     *
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function clearMembers(){
      return $this->_clear(1);
    }
    
    /**
     * Get <members> value
     *
     * @param int $idx
     * @return \google\api\MonitoredResource
     */
    public function getMembers($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <members> value
     *
     * @param \google\api\MonitoredResource $value
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function setMembers(\google\api\MonitoredResource $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <members>
     *
     * @return \google\api\MonitoredResource[]
     */
    public function getMembersList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <members>
     *
     * @param \google\api\MonitoredResource $value
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function addMembers(\google\api\MonitoredResource $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <total_size> has a value
     *
     * @return boolean
     */
    public function hasTotalSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <total_size> value
     *
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function clearTotalSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <total_size> value
     *
     * @return int
     */
    public function getTotalSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <total_size> value
     *
     * @param int $value
     * @return \google\monitoring\v3\ListGroupMembersResponse
     */
    public function setTotalSize( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class GroupServiceGrpcClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts) {
      parent::__construct($hostname, $opts);
    }
    /**
     * @param google\monitoring\v3\ListGroupsRequest $input
     */
    public function ListGroups(\google\monitoring\v3\ListGroupsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/ListGroups', $argument, '\google\monitoring\v3\ListGroupsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\monitoring\v3\GetGroupRequest $input
     */
    public function GetGroup(\google\monitoring\v3\GetGroupRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/GetGroup', $argument, '\google\monitoring\v3\Group::deserialize', $metadata, $options);
    }
    /**
     * @param google\monitoring\v3\CreateGroupRequest $input
     */
    public function CreateGroup(\google\monitoring\v3\CreateGroupRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/CreateGroup', $argument, '\google\monitoring\v3\Group::deserialize', $metadata, $options);
    }
    /**
     * @param google\monitoring\v3\UpdateGroupRequest $input
     */
    public function UpdateGroup(\google\monitoring\v3\UpdateGroupRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/UpdateGroup', $argument, '\google\monitoring\v3\Group::deserialize', $metadata, $options);
    }
    /**
     * @param google\monitoring\v3\DeleteGroupRequest $input
     */
    public function DeleteGroup(\google\monitoring\v3\DeleteGroupRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/DeleteGroup', $argument, '\google\protobuf\EmptyC::deserialize', $metadata, $options);
    }
    /**
     * @param google\monitoring\v3\ListGroupMembersRequest $input
     */
    public function ListGroupMembers(\google\monitoring\v3\ListGroupMembersRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.monitoring.v3.GroupService/ListGroupMembers', $argument, '\google\monitoring\v3\ListGroupMembersResponse::deserialize', $metadata, $options);
    }
  }
}
