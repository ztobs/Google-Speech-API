<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/monitoring/v3/common.proto
//   Date: 2016-12-21 23:03:55

namespace google\monitoring\v3 {

  class TypedValue extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $bool_value = null;
    
    /**  @var int */
    public $int64_value = null;
    
    /**  @var float */
    public $double_value = null;
    
    /**  @var string */
    public $string_value = null;
    
    /**  @var \google\api\Distribution */
    public $distribution_value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.TypedValue');

      // OPTIONAL BOOL bool_value = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "bool_value";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 int64_value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "int64_value";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE double_value = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "double_value";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING string_value = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "string_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE distribution_value = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "distribution_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Distribution';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <bool_value> has a value
     *
     * @return boolean
     */
    public function hasBoolValue(){
      return $this->_has(1);
    }
    
    /**
     * Clear <bool_value> value
     *
     * @return \google\monitoring\v3\TypedValue
     */
    public function clearBoolValue(){
      return $this->_clear(1);
    }
    
    /**
     * Get <bool_value> value
     *
     * @return boolean
     */
    public function getBoolValue(){
      return $this->_get(1);
    }
    
    /**
     * Set <bool_value> value
     *
     * @param boolean $value
     * @return \google\monitoring\v3\TypedValue
     */
    public function setBoolValue( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <int64_value> has a value
     *
     * @return boolean
     */
    public function hasInt64Value(){
      return $this->_has(2);
    }
    
    /**
     * Clear <int64_value> value
     *
     * @return \google\monitoring\v3\TypedValue
     */
    public function clearInt64Value(){
      return $this->_clear(2);
    }
    
    /**
     * Get <int64_value> value
     *
     * @return int
     */
    public function getInt64Value(){
      return $this->_get(2);
    }
    
    /**
     * Set <int64_value> value
     *
     * @param int $value
     * @return \google\monitoring\v3\TypedValue
     */
    public function setInt64Value( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <double_value> has a value
     *
     * @return boolean
     */
    public function hasDoubleValue(){
      return $this->_has(3);
    }
    
    /**
     * Clear <double_value> value
     *
     * @return \google\monitoring\v3\TypedValue
     */
    public function clearDoubleValue(){
      return $this->_clear(3);
    }
    
    /**
     * Get <double_value> value
     *
     * @return float
     */
    public function getDoubleValue(){
      return $this->_get(3);
    }
    
    /**
     * Set <double_value> value
     *
     * @param float $value
     * @return \google\monitoring\v3\TypedValue
     */
    public function setDoubleValue( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <string_value> has a value
     *
     * @return boolean
     */
    public function hasStringValue(){
      return $this->_has(4);
    }
    
    /**
     * Clear <string_value> value
     *
     * @return \google\monitoring\v3\TypedValue
     */
    public function clearStringValue(){
      return $this->_clear(4);
    }
    
    /**
     * Get <string_value> value
     *
     * @return string
     */
    public function getStringValue(){
      return $this->_get(4);
    }
    
    /**
     * Set <string_value> value
     *
     * @param string $value
     * @return \google\monitoring\v3\TypedValue
     */
    public function setStringValue( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <distribution_value> has a value
     *
     * @return boolean
     */
    public function hasDistributionValue(){
      return $this->_has(5);
    }
    
    /**
     * Clear <distribution_value> value
     *
     * @return \google\monitoring\v3\TypedValue
     */
    public function clearDistributionValue(){
      return $this->_clear(5);
    }
    
    /**
     * Get <distribution_value> value
     *
     * @return \google\api\Distribution
     */
    public function getDistributionValue(){
      return $this->_get(5);
    }
    
    /**
     * Set <distribution_value> value
     *
     * @param \google\api\Distribution $value
     * @return \google\monitoring\v3\TypedValue
     */
    public function setDistributionValue(\google\api\Distribution $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\monitoring\v3 {

  class TimeInterval extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Timestamp */
    public $end_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $start_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.TimeInterval');

      // OPTIONAL MESSAGE end_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "end_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <end_time> has a value
     *
     * @return boolean
     */
    public function hasEndTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <end_time> value
     *
     * @return \google\monitoring\v3\TimeInterval
     */
    public function clearEndTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <end_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getEndTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <end_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\monitoring\v3\TimeInterval
     */
    public function setEndTime(\google\protobuf\Timestamp $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <start_time> has a value
     *
     * @return boolean
     */
    public function hasStartTime(){
      return $this->_has(1);
    }
    
    /**
     * Clear <start_time> value
     *
     * @return \google\monitoring\v3\TimeInterval
     */
    public function clearStartTime(){
      return $this->_clear(1);
    }
    
    /**
     * Get <start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStartTime(){
      return $this->_get(1);
    }
    
    /**
     * Set <start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\monitoring\v3\TimeInterval
     */
    public function setStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\monitoring\v3\Aggregation {

  class Aligner extends \DrSlump\Protobuf\Enum {
    const ALIGN_NONE = 0;
    const ALIGN_DELTA = 1;
    const ALIGN_RATE = 2;
    const ALIGN_INTERPOLATE = 3;
    const ALIGN_NEXT_OLDER = 4;
    const ALIGN_MIN = 10;
    const ALIGN_MAX = 11;
    const ALIGN_MEAN = 12;
    const ALIGN_COUNT = 13;
    const ALIGN_SUM = 14;
    const ALIGN_STDDEV = 15;
    const ALIGN_COUNT_TRUE = 16;
    const ALIGN_FRACTION_TRUE = 17;
    const ALIGN_PERCENTILE_99 = 18;
    const ALIGN_PERCENTILE_95 = 19;
    const ALIGN_PERCENTILE_50 = 20;
    const ALIGN_PERCENTILE_05 = 21;
  }
}
namespace google\monitoring\v3\Aggregation {

  class Reducer extends \DrSlump\Protobuf\Enum {
    const REDUCE_NONE = 0;
    const REDUCE_MEAN = 1;
    const REDUCE_MIN = 2;
    const REDUCE_MAX = 3;
    const REDUCE_SUM = 4;
    const REDUCE_STDDEV = 5;
    const REDUCE_COUNT = 6;
    const REDUCE_COUNT_TRUE = 7;
    const REDUCE_FRACTION_TRUE = 8;
    const REDUCE_PERCENTILE_99 = 9;
    const REDUCE_PERCENTILE_95 = 10;
    const REDUCE_PERCENTILE_50 = 11;
    const REDUCE_PERCENTILE_05 = 12;
  }
}
namespace google\monitoring\v3 {

  class Aggregation extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Duration */
    public $alignment_period = null;
    
    /**  @var int - \google\monitoring\v3\Aggregation\Aligner */
    public $per_series_aligner = null;
    
    /**  @var int - \google\monitoring\v3\Aggregation\Reducer */
    public $cross_series_reducer = null;
    
    /**  @var string[]  */
    public $group_by_fields = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.Aggregation');

      // OPTIONAL MESSAGE alignment_period = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "alignment_period";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL ENUM per_series_aligner = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "per_series_aligner";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\monitoring\v3\Aggregation\Aligner';
      $descriptor->addField($f);

      // OPTIONAL ENUM cross_series_reducer = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "cross_series_reducer";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\monitoring\v3\Aggregation\Reducer';
      $descriptor->addField($f);

      // REPEATED STRING group_by_fields = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "group_by_fields";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <alignment_period> has a value
     *
     * @return boolean
     */
    public function hasAlignmentPeriod(){
      return $this->_has(1);
    }
    
    /**
     * Clear <alignment_period> value
     *
     * @return \google\monitoring\v3\Aggregation
     */
    public function clearAlignmentPeriod(){
      return $this->_clear(1);
    }
    
    /**
     * Get <alignment_period> value
     *
     * @return \google\protobuf\Duration
     */
    public function getAlignmentPeriod(){
      return $this->_get(1);
    }
    
    /**
     * Set <alignment_period> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\monitoring\v3\Aggregation
     */
    public function setAlignmentPeriod(\google\protobuf\Duration $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <per_series_aligner> has a value
     *
     * @return boolean
     */
    public function hasPerSeriesAligner(){
      return $this->_has(2);
    }
    
    /**
     * Clear <per_series_aligner> value
     *
     * @return \google\monitoring\v3\Aggregation
     */
    public function clearPerSeriesAligner(){
      return $this->_clear(2);
    }
    
    /**
     * Get <per_series_aligner> value
     *
     * @return int - \google\monitoring\v3\Aggregation\Aligner
     */
    public function getPerSeriesAligner(){
      return $this->_get(2);
    }
    
    /**
     * Set <per_series_aligner> value
     *
     * @param int - \google\monitoring\v3\Aggregation\Aligner $value
     * @return \google\monitoring\v3\Aggregation
     */
    public function setPerSeriesAligner( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <cross_series_reducer> has a value
     *
     * @return boolean
     */
    public function hasCrossSeriesReducer(){
      return $this->_has(4);
    }
    
    /**
     * Clear <cross_series_reducer> value
     *
     * @return \google\monitoring\v3\Aggregation
     */
    public function clearCrossSeriesReducer(){
      return $this->_clear(4);
    }
    
    /**
     * Get <cross_series_reducer> value
     *
     * @return int - \google\monitoring\v3\Aggregation\Reducer
     */
    public function getCrossSeriesReducer(){
      return $this->_get(4);
    }
    
    /**
     * Set <cross_series_reducer> value
     *
     * @param int - \google\monitoring\v3\Aggregation\Reducer $value
     * @return \google\monitoring\v3\Aggregation
     */
    public function setCrossSeriesReducer( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <group_by_fields> has a value
     *
     * @return boolean
     */
    public function hasGroupByFields(){
      return $this->_has(5);
    }
    
    /**
     * Clear <group_by_fields> value
     *
     * @return \google\monitoring\v3\Aggregation
     */
    public function clearGroupByFields(){
      return $this->_clear(5);
    }
    
    /**
     * Get <group_by_fields> value
     *
     * @param int $idx
     * @return string
     */
    public function getGroupByFields($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <group_by_fields> value
     *
     * @param string $value
     * @return \google\monitoring\v3\Aggregation
     */
    public function setGroupByFields( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <group_by_fields>
     *
     * @return string[]
     */
    public function getGroupByFieldsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <group_by_fields>
     *
     * @param string $value
     * @return \google\monitoring\v3\Aggregation
     */
    public function addGroupByFields( $value){
     return $this->_add(5, $value);
    }
  }
}

