<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/monitoring/v3/group.proto
//   Date: 2016-12-21 23:03:54

namespace google\monitoring\v3 {

  class Group extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $display_name = null;
    
    /**  @var string */
    public $parent_name = null;
    
    /**  @var string */
    public $filter = null;
    
    /**  @var boolean */
    public $is_cluster = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.monitoring.v3.Group');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING display_name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "display_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING parent_name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "parent_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filter = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL is_cluster = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "is_cluster";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\Group
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <display_name> has a value
     *
     * @return boolean
     */
    public function hasDisplayName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <display_name> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function clearDisplayName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <display_name> value
     *
     * @return string
     */
    public function getDisplayName(){
      return $this->_get(2);
    }
    
    /**
     * Set <display_name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\Group
     */
    public function setDisplayName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <parent_name> has a value
     *
     * @return boolean
     */
    public function hasParentName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <parent_name> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function clearParentName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <parent_name> value
     *
     * @return string
     */
    public function getParentName(){
      return $this->_get(3);
    }
    
    /**
     * Set <parent_name> value
     *
     * @param string $value
     * @return \google\monitoring\v3\Group
     */
    public function setParentName( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(5);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function clearFilter(){
      return $this->_clear(5);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(5);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\monitoring\v3\Group
     */
    public function setFilter( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <is_cluster> has a value
     *
     * @return boolean
     */
    public function hasIsCluster(){
      return $this->_has(6);
    }
    
    /**
     * Clear <is_cluster> value
     *
     * @return \google\monitoring\v3\Group
     */
    public function clearIsCluster(){
      return $this->_clear(6);
    }
    
    /**
     * Get <is_cluster> value
     *
     * @return boolean
     */
    public function getIsCluster(){
      return $this->_get(6);
    }
    
    /**
     * Set <is_cluster> value
     *
     * @param boolean $value
     * @return \google\monitoring\v3\Group
     */
    public function setIsCluster( $value){
      return $this->_set(6, $value);
    }
  }
}

